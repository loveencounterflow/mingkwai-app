html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

* {
  vertical-align: bottom !important;
}

html {
  letter-spacing: 0ex;
  word-spacing: 0em;
}

html {
  font-variant-ligatures: common-ligatures;
}

cjkxbfix {
  font-variant-ligatures: normal;
}

splash,
ribbon,
tool,
grip,
overlay,
button,
tabletop,
artboard,
galley,
paper,
page,
chase,
box,
column,
gap,
line,
cork,
zoomer,
leftmargin,
rightmargin,
topmargin,
bottommargin,
shift {
  display: block;
}

@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Regular.ttf");
}

@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Italic.ttf");
  font-style: italic;
}

@font-face {
  font-family: 'lastresort';
  src: url("./fonts/LastResort.ttf");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-eot';
  src: url("./fonts/spincycle/spincycle_ot.eot");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-woff2';
  src: url("./fonts/spincycle/spincycle_ot.woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-woff';
  src: url("./fonts/spincycle/spincycle_ot.woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-truetype';
  src: url("./fonts/spincycle/spincycle_ot.ttf");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'cjk';
  src: url("./fonts/LastResort.ttf");
  unicode-range: U+02e80-02eff, U+02f00-02fdf, U+03000-0303f, U+031c0-031ef, U+03200-032ff, U+03300-033ff, U+03400-04dbf, U+04e00-09fff, U+0f900-0faff, U+0fe30-0fe4f, U+20000-2a6df, U+2a700-2b73f, U+2b740-2b81f, U+2f800-2fa1f;
}

@font-face {
  font-family: 'cjk';
  src: local('Sun-ExtA');
  unicode-range: U+02e80-02eff, U+02f00-02fdf, U+03000-0303f, U+031c0-031ef, U+03200-032ff, U+03300-033ff, U+03400-04dbf, U+04e00-09fff, U+0f900-0faff, U+0fe30-0fe4f, U+2f800-2fa1f;
}

@font-face {
  font-family: 'cjk';
  src: local('sunflower-u-cjk-xb');
  unicode-range: U+20000-2a6df, U+2a700-2b73f;
}

@font-face {
  font-family: 'cjk';
  src: local('jizura3b');
  unicode-range: U+e000-f8ff;
}

@font-face {
  font-family: 'mkts-babel';
  src: local('BabelStone Han');
}

mkts-babel {
  font-family: 'mkts-babel';
}

@font-face {
  font-family: 'mkts-hanaa';
  src: local('HanaMinA');
}

mkts-hanaa {
  font-family: 'mkts-hanaa';
}

@font-face {
  font-family: 'mkts-hanab';
  src: local('HanaMinB');
}

mkts-hanab {
  font-family: 'mkts-hanab';
}

@font-face {
  font-family: 'mkts-jzr';
  src: local('jizura3b');
}

mkts-jzr {
  font-family: 'mkts-jzr';
}

@font-face {
  font-family: 'mkts-sunxa';
  src: local('Sun-ExtA');
}

mkts-sunxa {
  font-family: 'mkts-sunxa';
}

@font-face {
  font-family: 'mkts-sunxb';
  src: local('sunflower-u-cjk-xb');
}

mkts-sunxb {
  font-family: 'mkts-sunxb';
}

shift {
  display: inline;
  position: relative;
}

@media screen {
  artboard {
    position: absolute;
    background-image: url("./background_linen_lime.png");
    min-width: 1000mm;
    padding: 50mm;
  }
}

@media print {
  artboard.galley {
    display: none;
  }
}

@media screen {
  zoomer {
    overflow: auto;
  }
}

@media print {
  zoomer {
    transform: scale(1, 1) !important;
  }
}

@media screen {
  overlay {
    display: block;
    position: absolute;
    top: 10mm;
    left: 10mm;
    color: rgba(100,100,100,0.25);
    pointer-events: none;
    font-family: "Century Schoolbook";
    font-style: italic;
    font-weight: bold;
    font-size: 30mm;
  }
}

@media print {
  overlay {
    display: none;
  }
}

@media screen {
  body {
    display: flex;
    flex-direction: column;
    background-color: #595944;
  }
}

@media screen {
  ribbon,
  vribbon {
    display: flex;
    flex-direction: column;
  }

  hribbon {
    position: fixed;
    top: 5mm;
    left: 5mm;
    display: flex;
    flex-direction: row;
    -mkts-draggable: xy;
    resize: both;
  }
}

@media print {
  ribbon,
  hribbon,
  vribbon {
    display: none;
  }
}

@media screen {
  .gui-console {
    /* ### TAINT make resizable, hideable ### */
    width: 100%;
    height: 50mm;
    background-color: rgba(50,50,50,0.9);
  }
}

@media print {
  .gui-console {
    display: none;
  }
}

@media screen {
  i.mkts-tool-hand {
    font-size: 2rem;
    background-image: url("./icons/mkts-tool-hand.png");
    width: 2rem;
    height: 2rem;
    background-repeat: no-repeat;
    background-size: 100%;
    display: block;
  }

  body.cursor-default {
    cursor: default;
  }

  body.cursor-hand {
    cursor: url("./icons/mkts-tool-hand-cursor.png"), auto;
  }

  body.grabbing {
    cursor: url("./icons/mkts-tool-hand-grabbing-cursor.png"), auto;
  }
}

@media screen {
  .btn {
    display: block;
    width: 100%;
  }
}

@media print {
  .btn {
    display: none;
  }
}

paper,
page {
  width: 210mm;
  height: 296.85mm;
  display: flex;
}

galley {
  display: none;
  min-height: 10mm;
  width: 210mm;
  float: left;
  height: auto;
}

ruler {
  display: block;
  position: absolute;
}

ruler.horizontal {
  width: 100%;
  height: 0;
  border-top: 1px solid #f00;
}

ruler.vertical {
  height: 100%;
  width: 0;
  border-left: 1px solid #f00;
}

chase {
  height: 280mm;
  position: relative;
  left: 4.5mm;
  top: 8mm;
  width: 201mm;
  display: flex;
  flex-direction: column;
}

galley chase {
  height: auto;
  top: 0;
}

@media screen {
  paper,
  page,
  galley {
    background-color: #f0f0f0;
    box-shadow: 10px 10px 35px 0px rgba(0,0,0,0.5);
    float: left;
    margin: 10mm;
    position: relative;
  }

  galley {
    display: flex;
  }
}

@media print {
  paper,
  page {
    overflow: hidden;
    page-break-after: always;
  }
}

box,
hbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
}

vbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

column {
  /* Nominal width so all columns in a flex box have the same width regardless of content: */
  width: 1mm;
  flex-shrink: 1;
  flex-grow: 1;
  /* `position: relative` needed for corks */
  position: relative;
}

hgap {
  width: 100%;
  flex-shrink: 1;
  flex-grow: 1;
}

xhgap {
  width: 100%;
  flex-shrink: 1000000;
  flex-grow: 1000000;
}

vgap {
  width: 5mm;
  min-width: 5mm;
  max-width: 5mm;
  flex-shrink: 0;
  flex-grow: 0;
}

@media screen {
  gap,
  vgap,
  hgap,
  xhgap {
    background-color: rgba(100,100,100,0.25);
  }
}

leftmargin,
rightmargin {
  flex-shrink: 0;
  flex-grow: 0;
}

leftmargin {
  min-width: 15mm;
  max-width: 15mm;
}

rightmargin {
  min-width: 15mm;
  max-width: 15mm;
}

topmargin,
bottommargin {
  width: 100%;
  flex-shrink: 0;
  flex-grow: 0;
}

topmargin {
  min-height: 7mm;
  max-height: 7mm;
}

bottommargin {
  min-height: 13mm;
  max-height: 13mm;
}

@media screen {
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin {
    background-color: rgba(100,100,100,0.25);
  }
}

line {
  position: absolute;
  line-height: 5mm;
  height: 5mm;
  min-height: 5mm;
  max-height: 5mm;
}

p,
h1,
h2,
h3 {
  line-height: 5mm;
  text-align: justify;
  letter-spacing: -0.05ex;
  word-spacing: 0ex;
}

p.single:before,
p.first:before {
  /* ### NB fixed-width space used here; see e.g. https://www.cs.tut.fi/~jkorpela/chars/spaces.html. ### */
  content: '‚ÄÅ';
}

p.first,
p.middle {
  text-align: justify;
  text-align-last: justify;
}

p.last,
p.lone {
  text-align: justify;
  text-align-last: left;
}

p.single {
  text-align-last: left;
}

p.first:after,
p.middle:after,
p.middle:before,
p.last:before {
  display: none;
}

p.first,
p.middle {
  margin-bottom: 0;
}

p.middle,
p.last {
  margin-top: 0;
}

p.excess {
  background-color: #d40066;
}

p.slug {
  height: 5mm;
}

xbig {
  font-size: 200%;
}

xsmall {
  font-size: 50%;
}

html,
body {
  font-family: 'cjk', 'latin', 'lastresort';
}

strong,
b,
h1,
h2,
h3 {
  font-family: 'Impact';
}

kwic-lineup {
  display: block;
  white-space: nowrap;
  font-family: 'cjk';
}

p {
  -moz-supercssyeah: 42;
  column-count: 1;
}

h1 {
  column-count: -1;
}

@media screen {
  box,
  hbox,
  vbox,
  ribbon,
  hribbon,
  vribbon,
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin,
  gap,
  vgap,
  hgap,
  xhgap {
    outline: 1px dotted #f00;
    outline-offset: -1px;
  }
}


/*# sourceMappingURL=data:application/json;base64, */
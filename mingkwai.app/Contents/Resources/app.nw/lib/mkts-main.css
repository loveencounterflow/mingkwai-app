html {
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}
* {
  vertical-align: bottom !important;
}
html {
  letter-spacing: 0ex;
  word-spacing: 0em;
}
splash,
ribbon,
tool,
panel,
grip,
overlay,
button,
tabletop,
artboard,
galley,
paper,
page,
chase,
box,
column,
gap,
line,
cork,
zoomer,
leftmargin,
rightmargin,
topmargin,
bottommargin {
  display: block;
}
@font-face {
  font-family: 'cjk';
  src: url("/Users/flow/Library/Fonts/cwTeXQKai-Medium.ttf");
  unicode-range: U+4e00-9fff, U+3400-4dbf, U+2a700-2b73f, U+2b740-2b81f, U+2f00-2fdf, U+2e80-2eff, U+3000-303f, U+31c0-31ef, U+3200-32ff, U+3300-33ff, U+f900-faff, U+fe30-fe4f, U+2f800-2fa1f;
  color: #008000;
}
@font-face {
  font-family: 'cjk';
  src: url("/Users/flow/Library/Fonts/HanaMinB.ttf");
  unicode-range: U+20000-2b81f;
}
@font-face {
  font-family: 'cjk';
  src: local('jizura3b');
  unicode-range: U+e000-f8ff;
  color: #f00;
}
@font-face {
  font-family: 'jzr-babel';
  src: local('BabelStone Han');
}
@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Regular.ttf");
}
@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Italic.ttf");
  font-style: italic;
}
@font-face {
  font-family: 'lastresort';
  src: url("./fonts/LastResort.ttf");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'spincycle-eot';
  src: url("./fonts/spincycle/spincycle_ot.eot");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'spincycle-woff2';
  src: url("./fonts/spincycle/spincycle_ot.woff2");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'spincycle-woff';
  src: url("./fonts/spincycle/spincycle_ot.woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'spincycle-truetype';
  src: url("./fonts/spincycle/spincycle_ot.ttf");
  font-weight: normal;
  font-style: normal;
}
@media screen {
  artboard {
    position: absolute;
    background-image: url("./background_linen_lime.png");
    min-width: 1000mm;
    padding: 50mm;
  }
}
@media print {
  artboard.galley {
    display: none;
  }
}
@media screen {
  zoomer {
    overflow: auto;
  }
}
@media screen {
  overlay {
    display: block;
    position: absolute;
    top: 10mm;
    left: 10mm;
    color: rgba(100,100,100,0.25);
    pointer-events: none;
    font-family: "Century Schoolbook";
    font-style: italic;
    font-weight: bold;
    font-size: 30mm;
  }
}
@media print {
  overlay {
    display: none;
  }
}
@media screen {
  body {
    display: flex;
    flex-direction: column;
    background-color: #595944;
  }
}
@media screen {
  ribbon,
  vribbon {
    display: flex;
    flex-direction: column;
  }
  hribbon {
    position: fixed;
    top: 5mm;
    left: 5mm;
    display: flex;
    flex-direction: row;
    -mkts-draggable: xy;
    resize: both;
  }
}
@media print {
  ribbon,
  hribbon,
  vribbon {
    display: none;
  }
}
@media screen {
  .gui-console {
/* ### TAINT make resizable, hideable ### */
    width: 100%;
    height: 50mm;
    background-color: rgba(50,50,50,0.9);
  }
}
@media print {
  .gui-console {
    display: none;
  }
}
@media screen {
  i.mkts-tool-hand {
    font-size: 2rem;
    background-image: url("./icons/mkts-tool-hand.png");
    width: 2rem;
    height: 2rem;
    background-repeat: no-repeat;
    background-size: 100%;
    display: block;
  }
  body.cursor-default {
    cursor: default;
  }
  body.cursor-hand {
    cursor: url("./icons/mkts-tool-hand-cursor.png"), auto;
  }
  body.grabbing {
    cursor: url("./icons/mkts-tool-hand-grabbing-cursor.png"), auto;
  }
}
@media screen {
  .btn {
    display: block;
    width: 100%;
  }
}
@media print {
  .btn {
    display: none;
  }
}
paper,
page {
  width: 210mm;
  height: 296.85mm;
  display: flex;
}
galley {
  display: none;
  min-height: 10mm;
  width: 210mm;
  float: left;
  height: auto;
}
chase {
  position: relative;
  left: 4.5mm;
  top: 8mm;
  width: 201mm;
  height: 278.85mm;
  display: flex;
  flex-direction: column;
  float: left;
}
galley chase {
  height: auto;
  top: 0;
}
@media screen {
  paper,
  page,
  galley {
    background-color: #f0f0f0;
    box-shadow: 10px 10px 35px 0px rgba(0,0,0,0.5);
    float: left;
    margin: 10mm;
    position: relative;
  }
  galley {
    display: flex;
  }
}
@media print {
  paper,
  page {
    overflow: hidden;
    page-break-after: always;
  }
}
box,
hbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
}
vbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}
column {
/* Nominal width so all columns in a flex box have the same width regardless of content: */
  width: 1mm;
  flex-shrink: 1;
  flex-grow: 1;
/* `position: relative` needed for corks */
  position: relative;
}
hgap {
  width: 100%;
  flex-shrink: 1;
  flex-grow: 1;
}
xhgap {
  width: 100%;
  flex-shrink: 1000000;
  flex-grow: 1000000;
}
vgap {
  width: 5mm;
  min-width: 5mm;
  max-width: 5mm;
  flex-shrink: 0;
  flex-grow: 0;
}
@media screen {
  gap,
  vgap,
  hgap,
  xhgap {
    background-color: rgba(100,100,100,0.25);
  }
}
leftmargin,
rightmargin {
  flex-shrink: 0;
  flex-grow: 0;
}
leftmargin {
  min-width: 15mm;
  max-width: 15mm;
}
rightmargin {
  min-width: 15mm;
  max-width: 15mm;
}
topmargin,
bottommargin {
  width: 100%;
  flex-shrink: 0;
  flex-grow: 0;
}
topmargin {
  min-height: 11mm;
  max-height: 11mm;
}
bottommargin {
  min-height: 5mm;
  max-height: 5mm;
}
@media screen {
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin {
    background-color: rgba(100,100,100,0.25);
  }
}
line {
  position: absolute;
  line-height: 5mm;
  height: 5mm;
  min-height: 5mm;
  max-height: 5mm;
}
p,
h1,
h2,
h3 {
  line-height: 5mm;
  text-align: justify;
  letter-spacing: -0.05ex;
  word-spacing: 0ex;
}
p:before {
/* ### NB fixed-width space used here; see e.g. https://www.cs.tut.fi/~jkorpela/chars/spaces.html. ### */
  content: '‚ÄÅ';
}
xbig {
  font-size: 200%;
}
xsmall {
  font-size: 50%;
}
html,
body {
  font-family: 'cjk', 'latin', 'lastresort';
}
strong,
b,
h1,
h2,
h3 {
  font-family: 'Impact';
}
kwic-lineup {
  display: block;
  white-space: nowrap;
  font-family: 'cjk';
}
@media screen {
  box,
  hbox,
  vbox,
  ribbon,
  hribbon,
  vribbon,
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin,
  gap,
  vgap,
  hgap,
  xhgap {
    outline: 1px dotted #f00;
    outline-offset: -1px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

* {
  outline-offset: -0.5px;
}

* {
  vertical-align: bottom !important;
}

* {
  letter-spacing: 0ex;
  word-spacing: 0em;
}

@font-face {
  font-family: 'Sun-ExtA';
  src: local('Sun-ExtA');
  unicode-range: U+4e00-9fff;
  unicode-range: U+3400-4dbf;
  unicode-range: U+20000-2a6df;
  unicode-range: U+2a700-2b73f;
  unicode-range: U+2b740-2b81f;
  unicode-range: U+2f00-2fdf;
  unicode-range: U+2e80-2eff;
  unicode-range: U+3000-303f;
  unicode-range: U+31c0-31ef;
  unicode-range: U+3200-32ff;
  unicode-range: U+3300-33ff;
  unicode-range: U+f900-faff;
  unicode-range: U+fe30-fe4f;
  unicode-range: U+2f800-2fa1f;
}

@font-face {
  font-family: 'Ampersand';
  src: local('Schwabacher');
  unicode-range: U+26;
}

@font-face {
  font-family: 'cjk';
  src: local('Sun-ExtA');
  unicode-range: U+4e00-9fff, U+3000-303f;
}

@font-face {
  font-family: 'cjk-xb';
  src: local('sunflower-u-cjk-xb');
  unicode-range: U+20000-2b81f;
}

@font-face {
  font-family: 'jzr';
  src: local('jizura3b');
  unicode-range: U+e000-f8ff;
}

@font-face {
  font-family: 'jzr-babel';
  src: local('BabelStone Han');
}

artboard,
page,
paper,
galley,
box,
column,
wrap,
gap,
ribbon,
tool,
boxer,
panel,
grip,
line {
  display: block;
}

page,
paper,
galley,
box,
column,
wrap,
gap {
  position: relative;
}

artboard {
  width: 500mm;
  height: 700mm;
  top: 0;
  left: 0;
  transform-origin: top left;
  transform: scale(1);
}

paper {
  /* assuming `<page class='a4 portrait'>` */
  float: left;
  width: 210mm;
  height: 296.85mm;
}

page {
  width: 201mm;
  height: 275.85mm;
  left: 4.5mm;
  top: 3mm;
}

galley {
  width: 171mm;
  height: 259.85mm;
  left: 15mm;
  top: 11mm;
  display: flex;
  flex-direction: column;
}

paper.a4.portrait.endless {
  /* assuming `<page class='a4 portrait'>` */
  height: auto;
  padding-top: 14mm;
  padding-bottom: 23mm;
}

paper.a4.portrait.endless page {
  height: auto;
  top: 0;
}

paper.a4.portrait.endless galley {
  height: auto;
  min-height: 259.85mm/3;
  top: 0;
}

wrap {
  width: 100%;
  height: 50mm;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-shrink: 0;
  flex-grow: 0;
}

column {
  /* Nominal width so all columns in a flex box have the same width regardless of content: */
  width: 1mm;
  flex-shrink: 1;
  flex-grow: 1;
}

hgap {
  width: 100%;
  flex-shrink: 1;
  flex-grow: 1;
}

xhgap {
  width: 100%;
  flex-shrink: 1000000;
  flex-grow: 1000000;
}

vgap {
  width: 5mm;
  min-width: 5mm;
  max-width: 5mm;
  flex-shrink: 0;
  flex-grow: 0;
}

ribbon {
  display: none;
}

tool {
  display: block;
}

tool.save {
  background-color: #f00;
}

tool.open {
  background-color: #ffa500;
}

tool.print {
  background-color: #008000;
}

.cork {
  display: none;
}

p.is-first,
p.is-middle {
  text-align: justify;
  text-align-last: justify;
}

p.is-last,
p.is-lone {
  text-align: justify;
  text-align-last: left;
}

p.is-first:after,
p.is-middle:after,
p.is-middle:before,
p.is-last:before {
  display: none;
}

p.is-first,
p.is-middle {
  margin-bottom: 0;
}

p.is-middle,
p.is-last {
  margin-top: 0;
}

page h1 {
  -mkts-columns: all;
}

#mytext p:last-child {
  margin-bottom: 0;
}

.xbig {
  font-size: 200%;
}

.hilite {
  color: #821e00;
}

@media print {
@page {
    width: 210mm;
    height: 297mm;
    margin: 0;
}

  paper {
    page-break-inside: avoid;
    page-break-before: always;
  }
}

@media screen {
  artboard,
  page,
  paper,
  galley,
  box,
  column,
  wrap,
  gap {
    background-color: transparent;
  }

  artboard {
    background-image: url("./background_linen_lime.png");
  }

  paper {
    margin: 5mm;
    background-color: #fafafa;
    box-shadow: 10px 10px 35px 0px rgba(0,0,0,0.5);
  }

  page {
    outline: 1px dotted #f00;
  }

  galley {
    outline: 1px dotted #008000;
  }

  wrap {
    outline: 1.5px dotted #000;
  }

  box,
  column {
    outline: 1px dotted #00f;
  }

  vgap,
  hgap,
  xhgap {
    background-color: rgba(240,240,130,0.5);
  }

  .flex-columns-wrap {
    outline: 1px dotted #ee82ee;
  }

  html,
  body {
    height: 100%;
  }

  html {
    background-image: url("./background_linen.png") !important;
    background-color: #808080 !important;
  }

  body {
    background-color: transparent;
  }

  outer {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
  }

  panel {
    top: 0;
    left: 0;
    overflow: hidden;
    outline: 1px solid #000;
    align-self: strech;
  }

  panel.top,
  panel.bottom {
    flex-grow: 0;
    flex-shrink: 0;
  }

  panel.top {
    height: 10mm;
  }

  panel.bottom {
    height: 50mm;
  }

  panel.center {
    overflow: scroll;
    flex-basis: main-size;
    flex-grow: 1;
    flex-shrink: 1;
  }

  grip {
    flex-grow: 0;
    flex-shrink: 0;
  }

  grip.horizontal {
    align-self: stretch;
    height: 10px;
    background-color: rgba(100,100,100,0.25);
  }

  boxer {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    padding: 1mm;
    z-index: 1000;
    pointer-events: none;
  }

  ribbon,
  ribbon.bar {
    pointer-events: auto;
    outline: 1px solid #000;
    background-color: rgba(100,100,100,0.25);
    position: fixed;
    display: flex;
    width: 100%;
    padding: 0.5mm;
  }

  ribbon.draggable {
    -mkts-draggable: xy;
    resize: both;
    overflow: hidden;
  }

  ribbon.draggable.vertical {
    width: 10mm;
    height: 10%;
    flex-direction: column;
  }

  ribbon.draggable.horizontal {
    width: 100%;
    height: 10%;
    flex-direction: row;
  }

  ribbon.left {
    left: 1mm;
  }

  ribbon.right {
    right: 1mm;
  }

  ribbon.top {
    top: 1mm;
  }

  ribbon.bottom {
    bottom: 1mm;
  }

  ribbon.dock,
  ribbon.tile,
  tool {
    pointer-events: auto;
  }

  tool.square.button {
    width: 10mm;
    height: 10mm;
    background-color: rgba(100,100,100,0.25);
    outline: 1px solid #000;
  }

  tool.console {
    width: 100%;
    height: 100%;
    background-color: rgba(10,0,0,0.5);
    color: #fff;
    overflow: auto;
  }

  tool.console div {
    font-family: "Flow DejaVu Sans Mono", 'Courier', monospace;
    font-size: 2.5mm;
    line-height: 3mm;
  }

  #focus {
    background-color: rgba(100,0,0,0.25);
  }

  .test .cork {
    display: inline-block;
    width: 0;
    height: 100%;
    outline: 1px solid #f00;
  }

  .mkts-lws {
    background-color: rgba(100,100,100,0.25);
  }

  #box-a {
    outline: 1px solid #f00;
  }

  #box-b {
    outline: 1px solid #008000;
  }

  #box-c {
    outline: 1px solid #00f;
  }

  .grid {
    opacity: 1;
  }

  .gridline {
    position: absolute;
    outline: 0.75px dotted #f00;
  }

  .gridline.horizontal {
    width: 210mm;
    height: 0px;
  }
}

.justify {
  text-align: justify;
}

.justify-all {
  text-align: justify;
  text-align-last: justify;
}

#content {
  flow-into: article;
}

.clear-float {
  clear: both;
}

body {
  font-family: 'Sun-ExtA';
  font-size: 3.5mm;
}

#table-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}

#json-display-doc,
#json-display-cells {
  border: 1px solid #f00;
}

#doc-table-plain,
#doc-table-sized {
  padding-left: 5ex;
  padding-right: 5ex;
}

.doc-table {
  border-collapse: collapse;
  border-spacing: 0px;
}

.size-1 {
  font-size: 100%;
}

.size-2 {
  font-size: 200%;
}

.size-3 {
  font-size: 300%;
}

.size-4 {
  font-size: 400%;
}

#controller {
  position: fixed;
}

.doc-table td {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  width: 1.3em;
  height: 1.3em;
  text-align: center;
  vertical-align: middle;
  border: 1px solid rgba(0,0,0,0.3);
}

.doc-table td {
  background: #fff;
  background: -moz-linear-gradient(-45deg, #fff 0%, #f1f5f9 50%, #f1f5f9 100%);
  background: -webkit-gradient(left top, right bottom, color-stop(0%, #fff), color-stop(50%, #f1f5f9), color-stop(100%, #f1f5f9));
  background: -webkit-linear-gradient(-45deg, #fff 0%, #f1f5f9 50%, #f1f5f9 100%);
  background: -o-linear-gradient(-45deg, #fff 0%, #f1f5f9 50%, #f1f5f9 100%);
  background: -ms-linear-gradient(-45deg, #fff 0%, #f1f5f9 50%, #f1f5f9 100%);
  background: linear-gradient(135deg, #fff 0%, #f1f5f9 50%, #f1f5f9 100%);
}

.doc-table td.this-col,
.doc-table td.this-row {
  background-color: rgba(227,166,81,0.1);
}

td.separator {
  border: none;
  background: transparent;
  height: 10px;
}

.doc-table td.this-cell {
  background-color: rgba(227,0,5,0.1);
  outline: 3px solid rgba(115,185,0,0.8);
  outline-offset: -3px;
}

.doc-table td.auto-space {
  background-color: rgba(5,14,150,0.05);
}

.doc-table td.block-space {
  background-color: rgba(30,50,50,0.6);
}

.doc-table td.free-cell {
  color: rgba(0,0,0,0.1);
}

.jzr-babel {
  font-family: 'BabelStone Han', 'Georgia';
}

h1,
p,
div {
  font-family: 'cjk', 'cjk-xb', 'jzr', 'Ampersand', 'EB Garamond 12', 'Georgia';
  line-height: 5mm;
}

line {
  position: absolute;
}

p {
  line-height: 5mm;
  height: 5mm;
  min-height: 5mm;
  max-height: 5mm;
}

p:before {
  /* ### NB fixed-width space used here; see e.g. https://www.cs.tut.fi/~jkorpela/chars/spaces.html. ### */
  content: '‚ÄÅ';
}


/*# sourceMappingURL=data:application/json;base64, */
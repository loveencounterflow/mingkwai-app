// Generated by CoffeeScript 1.9.0
(function() {
  var $, CND, D, LODASH, TEACUP, after, alert, badge, debug, echo, help, info, log, njs_fs, njs_path, rpr, sleep, step, suspend, urge, warn, whisper;

  njs_path = require('path');

  njs_fs = require('fs');

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = '眀快排字机/LINESETTER';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  urge = CND.get_logger('urge', badge);

  whisper = CND.get_logger('whisper', badge);

  help = CND.get_logger('help', badge);

  echo = CND.echo.bind(CND);

  suspend = require('coffeenode-suspend');

  step = suspend.step;

  after = suspend.after;

  sleep = suspend.sleep;

  D = require('pipedreams2');

  $ = D.remit.bind(D);

  TEACUP = require('coffeenode-teacup');

  LODASH = require('lodash');

  this.HOTMETAL = require('hotmetal');

  this.get_column_linecounts = function(strategy, line_count, column_count) {

    /* thx to http://stackoverflow.com/a/1244369/256361 */
    var R, col, _i;
    R = [];
    switch (strategy) {
      case 'even':
        for (col = _i = 1; 1 <= column_count ? _i <= column_count : _i >= column_count; col = 1 <= column_count ? ++_i : --_i) {
          R.push(Math.floor((line_count + column_count - col) / column_count));
        }
        break;
      default:
        throw new Error("unknown strategy " + (rpr(strategy)));
    }
    return R;
  };

}).call(this);

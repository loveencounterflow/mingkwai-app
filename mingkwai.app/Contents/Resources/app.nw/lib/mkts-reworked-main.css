html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

* {
  vertical-align: bottom !important;
}

html {
  letter-spacing: 0ex;
  word-spacing: 0em;
}

splash,
ribbon,
tool,
panel,
grip,
overlay,
button,
tabletop,
artboard,
galley,
paper,
page,
chase,
box,
column,
gap,
line,
cork,
zoomer,
leftmargin,
rightmargin,
topmargin,
bottommargin {
  display: block;
}

@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Regular.ttf");
}

@font-face {
  font-family: 'latin';
  src: url("./fonts/EBGaramond-0.016-web/EBGaramond12-Italic.ttf");
  font-style: italic;
}

@font-face {
  font-family: 'lastresort';
  src: url("./fonts/LastResort.ttf");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-eot';
  src: url("./fonts/spincycle/spincycle_ot.eot");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-woff2';
  src: url("./fonts/spincycle/spincycle_ot.woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-woff';
  src: url("./fonts/spincycle/spincycle_ot.woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'spincycle-truetype';
  src: url("./fonts/spincycle/spincycle_ot.ttf");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'cjk';
  src: url("./fonts/LastResort.ttf");
  unicode-range: U+02e80-02eff, U+02f00-02fdf, U+03000-0303f, U+031c0-031ef, U+03200-032ff, U+03300-033ff, U+03400-04dbf, U+04e00-09fff, U+0f900-0faff, U+0fe30-0fe4f, U+20000-2a6df, U+2a700-2b73f, U+2b740-2b81f, U+2f800-2fa1f;
}

@font-face {
  font-family: 'cjk';
  src: local('Sun-ExtA');
  unicode-range: U+02e80-02eff, U+02f00-02fdf, U+03000-0303f, U+031c0-031ef, U+03200-032ff, U+03300-033ff, U+03400-04dbf, U+04e00-09fff, U+0f900-0faff, U+0fe30-0fe4f, U+2f800-2fa1f;
}

@font-face {
  font-family: 'cjk';
  src: local('sunflower-u-cjk-xb');
  unicode-range: U+20000-2b81f;
}

@font-face {
  font-family: 'cjk';
  src: local('jizura3b');
  unicode-range: U+e000-f8ff;
}

@font-face {
  font-family: 'jzr-babel';
  src: local('BabelStone Han');
}

@media screen {
  artboard {
    position: absolute;
    background-image: url("./background_linen_lime.png");
    min-width: 1000mm;
    padding: 50mm;
  }
}

@media print {
  artboard.galley {
    display: none;
  }
}

@media screen {
  zoomer {
    overflow: auto;
  }
}

@media screen {
  overlay {
    display: block;
    position: absolute;
    top: 10mm;
    left: 10mm;
    color: rgba(100,100,100,0.25);
    pointer-events: none;
    font-family: "Century Schoolbook";
    font-style: italic;
    font-weight: bold;
    font-size: 30mm;
  }
}

@media print {
  overlay {
    display: none;
  }
}

@media screen {
  body {
    display: flex;
    flex-direction: column;
    background-color: #595944;
  }
}

@media screen {
  ribbon,
  vribbon {
    display: flex;
    flex-direction: column;
  }

  hribbon {
    position: fixed;
    top: 5mm;
    left: 5mm;
    display: flex;
    flex-direction: row;
    -mkts-draggable: xy;
    resize: both;
  }
}

@media print {
  ribbon,
  hribbon,
  vribbon {
    display: none;
  }
}

@media screen {
  .gui-console {
    /* ### TAINT make resizable, hideable ### */
    width: 100%;
    height: 50mm;
    background-color: rgba(50,50,50,0.9);
  }
}

@media print {
  .gui-console {
    display: none;
  }
}

@media screen {
  i.mkts-tool-hand {
    font-size: 2rem;
    background-image: url("./icons/mkts-tool-hand.png");
    width: 2rem;
    height: 2rem;
    background-repeat: no-repeat;
    background-size: 100%;
    display: block;
  }

  body.cursor-default {
    cursor: default;
  }

  body.cursor-hand {
    cursor: url("./icons/mkts-tool-hand-cursor.png"), auto;
  }

  body.grabbing {
    cursor: url("./icons/mkts-tool-hand-grabbing-cursor.png"), auto;
  }
}

@media screen {
  .btn {
    display: block;
    width: 100%;
  }
}

@media print {
  .btn {
    display: none;
  }
}

paper,
page {
  width: 210mm;
  height: 296.85mm;
  display: flex;
}

galley {
  display: none;
  min-height: 10mm;
  width: 210mm;
  float: left;
  height: auto;
}

chase {
  position: relative;
  left: 4.5mm;
  top: 8mm;
  width: 201mm;
  height: 278.85mm;
  display: flex;
  flex-direction: column;
  float: left;
}

galley chase {
  height: auto;
  top: 0;
}

@media screen {
  paper,
  page,
  galley {
    background-color: #f0f0f0;
    box-shadow: 10px 10px 35px 0px rgba(0,0,0,0.5);
    float: left;
    margin: 10mm;
    position: relative;
  }

  galley {
    display: flex;
  }
}

@media print {
  paper,
  page {
    overflow: hidden;
    page-break-after: always;
  }
}

box,
hbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
}

vbox {
  flex-shrink: 1;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

column {
  /* Nominal width so all columns in a flex box have the same width regardless of content: */
  width: 1mm;
  flex-shrink: 1;
  flex-grow: 1;
  /* `position: relative` needed for corks */
  position: relative;
}

hgap {
  width: 100%;
  flex-shrink: 1;
  flex-grow: 1;
}

xhgap {
  width: 100%;
  flex-shrink: 1000000;
  flex-grow: 1000000;
}

vgap {
  width: 5mm;
  min-width: 5mm;
  max-width: 5mm;
  flex-shrink: 0;
  flex-grow: 0;
}

@media screen {
  gap,
  vgap,
  hgap,
  xhgap {
    background-color: rgba(100,100,100,0.25);
  }
}

leftmargin,
rightmargin {
  flex-shrink: 0;
  flex-grow: 0;
}

leftmargin {
  min-width: 15mm;
  max-width: 15mm;
}

rightmargin {
  min-width: 15mm;
  max-width: 15mm;
}

topmargin,
bottommargin {
  width: 100%;
  flex-shrink: 0;
  flex-grow: 0;
}

topmargin {
  min-height: 11mm;
  max-height: 11mm;
}

bottommargin {
  min-height: 5mm;
  max-height: 5mm;
}

@media screen {
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin {
    background-color: rgba(100,100,100,0.25);
  }
}

line {
  position: absolute;
  line-height: 5mm;
  height: 5mm;
  min-height: 5mm;
  max-height: 5mm;
}

p,
h1,
h2,
h3 {
  line-height: 5mm;
  text-align: justify;
  letter-spacing: -0.05ex;
  word-spacing: 0ex;
}

p:before {
  /* ### NB fixed-width space used here; see e.g. https://www.cs.tut.fi/~jkorpela/chars/spaces.html. ### */
  content: '‚ÄÅ';
}

xbig {
  font-size: 200%;
}

xsmall {
  font-size: 50%;
}

html,
body {
  font-family: 'cjk', 'latin', 'lastresort';
}

strong,
b,
h1,
h2,
h3 {
  font-family: 'Impact';
}

kwic-lineup {
  display: block;
  white-space: nowrap;
  font-family: 'cjk';
}

@media screen {
  box,
  hbox,
  vbox,
  ribbon,
  hribbon,
  vribbon,
  leftmargin,
  rightmargin,
  topmargin,
  bottommargin,
  gap,
  vgap,
  hgap,
  xhgap {
    outline: 1px dotted #f00;
    outline-offset: -1px;
  }
}


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvbWt0cy1maXhlcy5zdHlsIiwiL3NvdXJjZS9ta3RzLWN1c3RvbS1lbGVtZW50cy5zdHlsIiwiL3NvdXJjZS9ta3RzLWZvbnRzLnN0eWwiLCIvc291cmNlL21rdHMtZm9udHMtY2prLnN0eWwiLCIvc291cmNlL21rdHMtZ3VpLnN0eWwiLCIvc291cmNlL21rdHMtbGF5b3V0LnN0eWwiLCIvc291cmNlL21rdHMtZGV2LnN0eWwiLCJtaW5na3dhaS5hcHAvQ29udGVudHMvUmVzb3VyY2VzL2FwcC5udy9saWIvbWt0cy1tYWluLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFOzs7QUFFRjs7O0VBQ0U7OztBQU1GO0VBQ0U7OztBQUtGO0VBQ0U7RUFDQTs7O0FDdEJGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTRCRTs7O0FDVEY7RUFDSTtFQUNBOzs7QUFFSjtFQUNJO0VBQ0E7RUFDQTs7O0FBaUJKO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQU1GO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQzFFRjtFQUNFO0VBQ0E7RUFDQTs7O0FBaUJGO0VBQ0U7RUFDQTtFQUVBOzs7QUFhRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTs7O0FDL0NLO0FBQ0w7SUFDRTtJQUNBO0lBQ0E7SUFDQTs7OztBQUdHO0FBQ0w7SUFDRTs7OztBQU1HO0FBQ0w7SUFDRTs7OztBQVNHO0FBQ0w7SUFDRTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTs7OztBQUdHO0FBQ0w7SUFDRTs7OztBQUtHO0FBQ0w7SUFDRTtJQUNBO0lBQ0E7Ozs7QUFNRztBQUNMOztJQUVFO0lBQ0E7OztBQUVGO0lBQ0U7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Ozs7QUFHRztBQUNMOzs7SUFHRTs7OztBQU1HO0FBQ0w7QUFDRTtJQUNBO0lBQ0E7SUFDQTs7OztBQUdHO0FBQ0w7SUFDRTs7OztBQU1HO0FBQ0w7SUFDRTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTs7O0FBRUY7SUFDRTs7O0FBRUY7SUFDRTs7O0FBRUY7SUFDRTs7OztBQU1HO0FBQ0w7SUFDRTtJQUNBOzs7O0FBSUc7QUFDTDtJQUNFOzs7O0FDckdKOztFQUVFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUlGO0VBQ0U7RUFDQTs7O0FBR0s7QUFDTDs7O0lBR0U7SUFDQTtJQUNBO0lBQ0E7SUFDQTs7O0FBRUY7SUFDRTs7OztBQUdHO0FBQ0w7O0lBRUU7SUFDQTs7OztBQUtKOztFQUVFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtBQUVFO0VBQ0E7RUFDQTtFQUNBO0FBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBRUE7RUFDQTtFQUNBO0VBQ0E7OztBQUdLO0FBQ0w7Ozs7SUFJRTs7OztBQU1KOztFQUVFO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTs7O0FBRUY7RUFDRTtFQUNBOzs7QUFFRjs7RUFFRTtFQUNBO0VBQ0E7OztBQUVGO0VBQ0U7RUFDQTs7O0FBRUY7RUFDRTtFQUNBOzs7QUFJSztBQUNMOzs7O0lBSUU7Ozs7QUFNSjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUVGOzs7O0VBSUU7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0FBQ0U7RUFDQTs7O0FBT0Y7RUFDRTs7O0FBRUY7RUFDRTs7O0FBRUY7O0VBQ0U7OztBQUVGOzs7OztFQUtFOzs7QUFLRjtFQUNFO0VBQ0E7RUFDQTs7O0FDM09LO0FBQ0w7Ozs7Ozs7Ozs7Ozs7O0lBY0U7SUFDQTs7OztBQ2lZSiIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5cblxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgQk9YIE1PREVMXG4gIHRoeCB0byBodHRwOi8vd3d3LnBhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3LyAqL1xuaHRtbFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyXG4gIGJveC1zaXppbmc6IGluaGVyaXRcblxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgRklYSU5HIExJTkUgSEVJR0hUUyAvIEdSSURcbiAgdGh4IHRvIGh0dHA6Ly93ZWJkZXNpZ25hbmRzdWNoLmNvbS9ob3ctdG8tZml4LXN1cC1zdWItbGluZS1oZWlnaHQtcHJvYmxlbS13aXRoLWNzcy8gKi9cbipcbiAgdmVydGljYWwtYWxpZ246ICAgICAgICAgYm90dG9tICFpbXBvcnRhbnRcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIE1JTklNQUwgU1BBQ0lORyBJTiBURVhUXG4gIHNldHMgd29yZCBzcGFjaW5nIHRvIGEgbWluaW11bSB0aGF0IGlzIGFjdHVhbGx5IGxhcmdlciB0aGFuIHplcm8gKD8pICovXG5odG1sXG4gIGxldHRlci1zcGFjaW5nOiAgICAgICAgIDBleFxuICB3b3JkLXNwYWNpbmc6ICAgICAgICAgICAwZW1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIExJR0FUVVJFUyBBTkQgS0VSTklOR1xuICBjZi4gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2ZvbnQtZmVhdHVyZS1zZXR0aW5nc1xuICBodHRwOi8vZGVtb3N0aGVuZXMuaW5mby9ibG9nLzU0Ny9NYWtlLVlvdXItV2ViLVBhZ2VzLU1vcmUtTGVnaWJsZS1XaXRoLUxpZ2F0dXJlcy1hbmQtS2VybmluZy1QYWlyc1xuICBodHRwOi8vY2xhZ251dC5jb20vc2FuZGJveC9vcGVudHlwZS9saWdhdHVyZXMgKi9cblxuLyogIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICovXG4vKiBUQUlOVCB0aGVzZSBzZXR0aW5ncyBpbnRlcmFjdCB3aXRoIGBAZm9udC1mYWNlYCBydWxlcywgYXQgbGVhc3Qgd2l0aCB0aG9zZSBjb25jZXJuaW5nIFN1bkV4dC1BLCBTdW4tRXh0Qlxuc3VjaCB0aGF0IGF0IGxlYXN0IGNvZGVwb2ludHMgZnJvbSB0aGUgbGF0dGVyIGFyZSBkaXNwbGF5ZWQgYXMgdGhpbiB3aGl0ZSBzcGFjZXMuICovXG4vKiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgKi9cblxuLy8gaHRtbFxuLy8gICAvLyB0ZXh0LXJlbmRlcmluZzogICAgICAgICAgICAgICAgIG9wdGltaXplTGVnaWJpbGl0eVxuLy8gICB0ZXh0LXJlbmRlcmluZzogICAgICAgICAgICAgICAgIGdlb21ldHJpY1ByZWNpc2lvblxuLy8gICAvLyBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiAgICAgICAgIGNvbW1vbi1saWdhdHVyZXNcbi8vICAgLy8gZm9udC1rZXJuaW5nOiAgICAgICAgICAgICAgICAgICBub3JtYWxcbi8vICAgLXdlYmtpdC1mb250LWZlYXR1cmUtc2V0dGluZ3M6ICBcImxpZ2FcIiAxLCBcImRsaWdcIiAxXG5cbiAgLy8gLyogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2ZvbnQtdmFyaWFudC1lYXN0LWFzaWFuICovXG4gIC8vIGZvbnQtdmFyaWFudC1lYXN0LWFzaWFuOiBub3JtYWxcbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IHJ1YnlcbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IGppczc4ICAgICAgICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IGppczgzICAgICAgICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IGppczkwICAgICAgICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IGppczA0ICAgICAgICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IHNpbXBsaWZpZWQgICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IHRyYWRpdGlvbmFsICAgICAgICAvKiA8ZWFzdC1hc2lhbi12YXJpYW50LXZhbHVlcz4gKi9cbiAgLy8gZm9udC12YXJpYW50LWVhc3QtYXNpYW46IGZ1bGwtd2lkdGggICAgICAgICAvKiA8ZWFzdC1hc2lhbi13aWR0aC12YWx1ZXM+ICovXG4gIC8vIGZvbnQtdmFyaWFudC1lYXN0LWFzaWFuOiBwcm9wb3J0aW9uYWwtd2lkdGggLyogPGVhc3QtYXNpYW4td2lkdGgtdmFsdWVzPiAqL1xuICAvLyBmb250LXZhcmlhbnQtZWFzdC1hc2lhbjogcnVieSBmdWxsLXdpZHRoIGppczgzXG5cblxuXG5cblxuXG5cblxuIiwiXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogR1VJICovXG5zcGxhc2hcbnJpYmJvblxudG9vbFxucGFuZWxcbmdyaXBcbm92ZXJsYXlcbmJ1dHRvbiAvLyBub3QgcmVhbGx5IGEgY3VzdG9tIGVsZW1lbnRcbi8qIFdvcmtzcGFjZSAqL1xudGFibGV0b3BcbmFydGJvYXJkXG4vLyBzcHJlYWRcbi8vIHNoZWV0XG4vKiBMYXlvdXQgKi9cbmdhbGxleVxucGFwZXJcbnBhZ2VcbmNoYXNlXG5ib3hcbmNvbHVtblxuZ2FwXG5saW5lXG5jb3JrXG56b29tZXJcbmNoYXNlXG5sZWZ0bWFyZ2luXG5yaWdodG1hcmdpblxudG9wbWFyZ2luXG5ib3R0b21tYXJnaW5cbiAgZGlzcGxheTogICAgICAgICAgICAgICAgYmxvY2tcblxuXG5cbiIsIlxuXG5cblxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogTEFUSU4gKEVCIEdhcmFtb25kKSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKlxuLSBFQkdhcmFtb25kLUluaXRpYWxzOiBJbml0aWFsc1xuLSBFQkdhcmFtb25kLUluaXRpYWxzRjE6IEJhY2tncm91bmQgKHRoZSBvcm5hbWVudCkgb2YgaW5pdGlhbHNcbi0gRUJHYXJhbW9uZC1Jbml0aWFsc0YyOiBGb3JlZ3JvdW5kICh0aGUgbGV0dGVyKSBvZiBpbml0aWFsc1xuLSBFQkdhcmFtb25kMDgtSXRhbGljOiBJdGFsaWMgZm9udCBmb3IgZGVzaWduIHNpemUgOHB0ICh2ZXJ5IHJvdWdoIHNwYWNpbmchKVxuLSBFQkdhcmFtb25kMDgtUmVndWxhcjogUmVndWxhciBmb250IGZvciBkZXNpZ24gc2l6ZSA4cHRcbi0gRUJHYXJhbW9uZDEyLUFsbFNDOiBBbGwgc21hbGxjYXBzIGZvbnQgZm9yIHByb2dyYW1zIHRoYXQgaWdub3JlIG9wZW50eXBlIGZlYXR1cmVzXG4tIEVCR2FyYW1vbmQxMi1Cb2xkOiBCb2xkIGZvbnQgZm9yIGRlc2lnbiBzaXplIDEycHQgKHZlcnkgcm91Z2gvdW51c2FibGU7IG5vdCBpbmNsdWRlZCBpbiByZWxlYXNlcylcbi0gRUJHYXJhbW9uZDEyLUl0YWxpYzogSXRhbGljIGZvbnQgZm9yIGRlc2lnbiBzaXplIDEycHRcbi0gRUJHYXJhbW9uZDEyLVJlZ3VsYXI6IFJlZ3VsYXIgZm9udCBmb3IgZGVzaWduIHNpemUgMTJwdFxuLSBFQkdhcmFtb25kMTItU0M6IFNtYWxsY2FwcyBmb250IGZvciBwcm9ncmFtcyB0aGF0IGlnbm9yZSBvcGVudHlwZSBmZWF0dXJlcyAoMTJwdClcbiovXG4vKiBodHRwOi8vd3d3Lmdlb3JnZHVmZm5lci5hdC9lYmdhcmFtb25kICovXG5cbkBmb250LWZhY2VcbiAgICBmb250LWZhbWlseTogICAgICAgICAgJ2xhdGluJ1xuICAgIHNyYzogICAgICAgICAgICAgICAgICB1cmwoICcuL2ZvbnRzL0VCR2FyYW1vbmQtMC4wMTYtd2ViL0VCR2FyYW1vbmQxMi1SZWd1bGFyLnR0ZicgKVxuXG5AZm9udC1mYWNlXG4gICAgZm9udC1mYW1pbHk6ICAgICAgICAgICdsYXRpbidcbiAgICBzcmM6ICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kMTItSXRhbGljLnR0ZicgKVxuICAgIGZvbnQtc3R5bGU6ICAgICAgICAgICBpdGFsaWNcblxuLyogcGVuZGluZzpcbiAgICBzcmM6ICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kMDgtSXRhbGljLndvZmYnIClcbiAgICBzcmM6ICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kMDgtUmVndWxhci53b2ZmJyApXG4gICAgc3JjOiAgICAgICAgICAgICAgICAgIHVybCggJy4vZm9udHMvRUJHYXJhbW9uZC0wLjAxNi13ZWIvRUJHYXJhbW9uZC1Jbml0aWFscy53b2ZmJyApXG4gICAgc3JjOiAgICAgICAgICAgICAgICAgIHVybCggJy4vZm9udHMvRUJHYXJhbW9uZC0wLjAxNi13ZWIvRUJHYXJhbW9uZC1Jbml0aWFsc0YxLndvZmYnIClcbiAgICBzcmM6ICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kLUluaXRpYWxzRjIud29mZicgKVxuICAgIHNyYzogICAgICAgICAgICAgICAgICB1cmwoICcuL2ZvbnRzL0VCR2FyYW1vbmQtMC4wMTYtd2ViL0VCR2FyYW1vbmQxMi1BbGxTQy53b2ZmJyApXG4gICAgc3JjOiAgICAgICAgICAgICAgICAgIHVybCggJy4vZm9udHMvRUJHYXJhbW9uZC0wLjAxNi13ZWIvRUJHYXJhbW9uZFNDMDgtUmVndWxhci53b2ZmJyApXG4gICAgc3JjOiAgICAgICAgICAgICAgICAgIHVybCggJy4vZm9udHMvRUJHYXJhbW9uZC0wLjAxNi13ZWIvRUJHYXJhbW9uZFNDMTItUmVndWxhci53b2ZmJyApXG4qL1xuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogTEFTVCBSRVNPUlQgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogICAgICAgICAgICAnbGFzdHJlc29ydCdcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9MYXN0UmVzb3J0LnR0ZicgKVxuICBmb250LXdlaWdodDogICAgICAgICAgICBub3JtYWxcbiAgZm9udC1zdHlsZTogICAgICAgICAgICAgbm9ybWFsXG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiBGT05UIFRFU1QgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogICAgICAgICAgICAgICAgJ3NwaW5jeWNsZS1lb3QnXG4gIHNyYzogICAgICAgICAgICAgICAgICAgICAgICB1cmwoJy4vZm9udHMvc3BpbmN5Y2xlL3NwaW5jeWNsZV9vdC5lb3QnKVxuICBmb250LXdlaWdodDogICAgICAgICAgICAgICAgbm9ybWFsXG4gIGZvbnQtc3R5bGU6ICAgICAgICAgICAgICAgICBub3JtYWxcblxuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogICAgICAgICAgICAgICAgJ3NwaW5jeWNsZS13b2ZmMidcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgICAgIHVybCgnLi9mb250cy9zcGluY3ljbGUvc3BpbmN5Y2xlX290LndvZmYyJylcbiAgZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgIG5vcm1hbFxuICBmb250LXN0eWxlOiAgICAgICAgICAgICAgICAgbm9ybWFsXG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgICAgICdzcGluY3ljbGUtd29mZidcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgICAgIHVybCgnLi9mb250cy9zcGluY3ljbGUvc3BpbmN5Y2xlX290LndvZmYnKVxuICBmb250LXdlaWdodDogICAgICAgICAgICAgICAgbm9ybWFsXG4gIGZvbnQtc3R5bGU6ICAgICAgICAgICAgICAgICBub3JtYWxcblxuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogICAgICAgICAgICAgICAgJ3NwaW5jeWNsZS10cnVldHlwZSdcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgICAgIHVybCgnLi9mb250cy9zcGluY3ljbGUvc3BpbmN5Y2xlX290LnR0ZicpXG4gIGZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgICBub3JtYWxcbiAgZm9udC1zdHlsZTogICAgICAgICAgICAgICAgIG5vcm1hbFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiIsIlxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIExBU1QgUkVTT1JUICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgJ2NqaydcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgdXJsKCAnLi9mb250cy9MYXN0UmVzb3J0LnR0ZicgKVxuICB1bmljb2RlLXJhbmdlOiBcXFxuICAgIFUrMDJlODAtMDJlZmYsICAgICAgICAvLyBDSksgUmFkaWNhbHMgU3VwcGxlbWVudCAgICAgICAgICAgICAgICAgdS1jamstcmFkMlxuICAgIFUrMDJmMDAtMDJmZGYsICAgICAgICAvLyBLYW5neGkgUmFkaWNhbHMgICAgICAgICAgICAgICAgICAgICAgICAgdS1jamstcmFkMVxuICAgIFUrMDMwMDAtMDMwM2YsICAgICAgICAvLyBDSksgU3ltYm9scyBhbmQgUHVuY3R1YXRpb24gICAgICAgICAgICAgdS1jamstc3ltXG4gICAgVSswMzFjMC0wMzFlZiwgICAgICAgIC8vIENKSyBTdHJva2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1LWNqay1zdHJrXG4gICAgVSswMzIwMC0wMzJmZiwgICAgICAgIC8vIEVuY2xvc2VkIENKSyBMZXR0ZXJzIGFuZCBNb250aHMgICAgICAgICB1LWNqay1lbmNsZXR0XG4gICAgVSswMzMwMC0wMzNmZiwgICAgICAgIC8vIENKSyBDb21wYXRpYmlsaXR5ICAgICAgICAgICAgICAgICAgICAgICB1LWNqay1jbXBcbiAgICBVKzAzNDAwLTA0ZGJmLCAgICAgICAgLy8gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQSAgICAgIHUtY2prLXhhXG4gICAgVSswNGUwMC0wOWZmZiwgICAgICAgIC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgICAgICAgICAgICAgICAgICB1LWNqa1xuICAgIFUrMGY5MDAtMGZhZmYsICAgICAgICAvLyBDSksgQ29tcGF0aWJpbGl0eSBJZGVvZ3JhcGhzICAgICAgICAgICAgdS1jamstY21waTFcbiAgICBVKzBmZTMwLTBmZTRmLCAgICAgICAgLy8gQ0pLIENvbXBhdGliaWxpdHkgRm9ybXMgICAgICAgICAgICAgICAgIHUtY2prLWNtcGZcbiAgICBVKzIwMDAwLTJhNmRmLCAgICAgICAgLy8gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQiAgICAgIHUtY2prLXhiXG4gICAgVSsyYTcwMC0yYjczZiwgICAgICAgIC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgRXh0ZW5zaW9uIEMgICAgICB1LWNqay14Y1xuICAgIFUrMmI3NDAtMmI4MWYsICAgICAgICAvLyBDSksgVW5pZmllZCBJZGVvZ3JhcGhzIEV4dGVuc2lvbiBEICAgICAgdS1jamsteGRcbiAgICBVKzJmODAwLTJmYTFmICAgICAgICAgLy8gQ0pLIENvbXBhdGliaWxpdHkgSWRlb2dyYXBocyBTdXBwbGVtZW50IHUtY2prLWNtcGkyXG5cblxuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogICAgICAgICAgICAnY2prJ1xuICBzcmM6ICAgICAgICAgICAgICAgICAgICBsb2NhbCggJ1N1bi1FeHRBJyApXG4gIC8vIHNyYzogICAgICAgICAgICAgICAgICAgIHVybCggJy4vZm9udHMvY2prL1N1bi1FeHRBLnR0ZicgKVxuICB1bmljb2RlLXJhbmdlOiBcXFxuICAgIFUrMDJlODAtMDJlZmYsICAgICAgICAvLyBDSksgUmFkaWNhbHMgU3VwcGxlbWVudCAgICAgICAgICAgICAgICAgdS1jamstcmFkMlxuICAgIFUrMDJmMDAtMDJmZGYsICAgICAgICAvLyBLYW5neGkgUmFkaWNhbHMgICAgICAgICAgICAgICAgICAgICAgICAgdS1jamstcmFkMVxuICAgIFUrMDMwMDAtMDMwM2YsICAgICAgICAvLyBDSksgU3ltYm9scyBhbmQgUHVuY3R1YXRpb24gICAgICAgICAgICAgdS1jamstc3ltXG4gICAgVSswMzFjMC0wMzFlZiwgICAgICAgIC8vIENKSyBTdHJva2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1LWNqay1zdHJrXG4gICAgVSswMzIwMC0wMzJmZiwgICAgICAgIC8vIEVuY2xvc2VkIENKSyBMZXR0ZXJzIGFuZCBNb250aHMgICAgICAgICB1LWNqay1lbmNsZXR0XG4gICAgVSswMzMwMC0wMzNmZiwgICAgICAgIC8vIENKSyBDb21wYXRpYmlsaXR5ICAgICAgICAgICAgICAgICAgICAgICB1LWNqay1jbXBcbiAgICBVKzAzNDAwLTA0ZGJmLCAgICAgICAgLy8gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQSAgICAgIHUtY2prLXhhXG4gICAgVSswNGUwMC0wOWZmZiwgICAgICAgIC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgICAgICAgICAgICAgICAgICB1LWNqa1xuICAgIFUrMGY5MDAtMGZhZmYsICAgICAgICAvLyBDSksgQ29tcGF0aWJpbGl0eSBJZGVvZ3JhcGhzICAgICAgICAgICAgdS1jamstY21waTFcbiAgICBVKzBmZTMwLTBmZTRmLCAgICAgICAgLy8gQ0pLIENvbXBhdGliaWxpdHkgRm9ybXMgICAgICAgICAgICAgICAgIHUtY2prLWNtcGZcbiAgICBVKzJmODAwLTJmYTFmICAgICAgICAgLy8gQ0pLIENvbXBhdGliaWxpdHkgSWRlb2dyYXBocyBTdXBwbGVtZW50IHUtY2prLWNtcGkyXG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgJ2NqaydcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgbG9jYWwoICdzdW5mbG93ZXItdS1jamsteGInIClcbiAgdW5pY29kZS1yYW5nZTogXFxcbiAgICBVKzIwMDAwLTJiODFmICAgICAgICAgLy8gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQiAgICAgIHUtY2prLXhiXG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgJ2NqaydcbiAgc3JjOiAgICAgICAgICAgICAgICAgICAgbG9jYWwoICdqaXp1cmEzYicgKVxuICB1bmljb2RlLXJhbmdlOiAgICAgICAgICBVK2UwMDAtZjhmZlxuXG5AZm9udC1mYWNlXG4gIGZvbnQtZmFtaWx5OiAgICAgICAgICAgICdqenItYmFiZWwnXG4gIHNyYzogICAgICAgICAgICAgICAgICAgIGxvY2FsKCAnQmFiZWxTdG9uZSBIYW4nIClcbiIsIlxuXG5cblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIEFSVEJPQVJEUyAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIGFydGJvYXJkXG4gICAgcG9zaXRpb246ICAgICAgICAgICAgICAgYWJzb2x1dGVcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAgICAgICB1cmwoIFwiLi9iYWNrZ3JvdW5kX2xpbmVuX2xpbWUucG5nXCIgKVxuICAgIG1pbi13aWR0aDogICAgICAgICAgICAgIDEwMDBtbVxuICAgIHBhZGRpbmc6ICAgICAgICAgICAgICAgIDUwbW1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgcHJpbnRcbiAgYXJ0Ym9hcmQuZ2FsbGV5XG4gICAgZGlzcGxheTogICAgICAgICAgICAgICAgbm9uZVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogWk9PTUVSUyAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIHpvb21lclxuICAgIG92ZXJmbG93OiAgICAgICAgICAgICAgIGF1dG9cbiAgICAvLyB0cmFuc2Zvcm06ICAgICAgICAgICAgICBzY2FsZSggMSApXG4gICAgLy8gdHJhbnNmb3JtLW9yaWdpbjogICAgICAgdG9wIGxlZnRcbiAgICAvLyBwb3NpdGlvbjogICAgICAgICAgICAgICBhYnNvbHV0ZVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogT1ZFUkxBWVMgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1lZGlhIHNjcmVlblxuICBvdmVybGF5XG4gICAgZGlzcGxheTogICAgICAgICAgICAgICAgYmxvY2tcbiAgICBwb3NpdGlvbjogICAgICAgICAgICAgICBhYnNvbHV0ZVxuICAgIHRvcDogICAgICAgICAgICAgICAgICAgIDEwbW1cbiAgICBsZWZ0OiAgICAgICAgICAgICAgICAgICAxMG1tXG4gICAgY29sb3I6ICAgICAgICAgICAgICAgICAgJGdyYXlcbiAgICBwb2ludGVyLWV2ZW50czogICAgICAgICBub25lXG4gICAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgXCJDZW50dXJ5IFNjaG9vbGJvb2tcIlxuICAgIGZvbnQtc3R5bGU6ICAgICAgICAgICAgIGl0YWxpY1xuICAgIGZvbnQtd2VpZ2h0OiAgICAgICAgICAgIGJvbGRcbiAgICBmb250LXNpemU6ICAgICAgICAgICAgICAzMG1tXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1lZGlhIHByaW50XG4gIG92ZXJsYXlcbiAgICBkaXNwbGF5OiAgICAgICAgICAgICAgICBub25lXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogQk9EWSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIGJvZHlcbiAgICBkaXNwbGF5OiAgICAgICAgICAgICAgICBmbGV4XG4gICAgZmxleC1kaXJlY3Rpb246ICAgICAgICAgY29sdW1uXG4gICAgYmFja2dyb3VuZC1jb2xvcjogICAgICAgJGRhcmstbGltZVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogUklCQk9OUyAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIHJpYmJvblxuICB2cmliYm9uXG4gICAgZGlzcGxheTogICAgICAgICAgICAgICAgZmxleFxuICAgIGZsZXgtZGlyZWN0aW9uOiAgICAgICAgIGNvbHVtblxuXG4gIGhyaWJib25cbiAgICBwb3NpdGlvbjogICAgICAgICAgICAgICBmaXhlZFxuICAgIHRvcDogICAgICAgICAgICAgICAgICAgIDVtbVxuICAgIGxlZnQ6ICAgICAgICAgICAgICAgICAgIDVtbVxuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgIGZsZXhcbiAgICBmbGV4LWRpcmVjdGlvbjogICAgICAgICByb3dcbiAgICAtbWt0cy1kcmFnZ2FibGU6ICAgICAgICB4eVxuICAgIHJlc2l6ZTogICAgICAgICAgICAgICAgIGJvdGhcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgcHJpbnRcbiAgcmliYm9uXG4gIGhyaWJib25cbiAgdnJpYmJvblxuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgIG5vbmVcblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIENPTlNPTEUgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1lZGlhIHNjcmVlblxuICAuZ3VpLWNvbnNvbGVcbiAgICAvKiAjIyMgVEFJTlQgbWFrZSByZXNpemFibGUsIGhpZGVhYmxlICMjIyAqL1xuICAgIHdpZHRoOiAgICAgICAgICAgICAgICAgIDEwMCVcbiAgICBoZWlnaHQ6ICAgICAgICAgICAgICAgICA1MG1tXG4gICAgYmFja2dyb3VuZC1jb2xvcjogICAgICAgJHNsYXRlXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1lZGlhIHByaW50XG4gIC5ndWktY29uc29sZVxuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgIG5vbmVcblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIE1PVVNFIENVUlNPUiAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIGkubWt0cy10b29sLWhhbmRcbiAgICBmb250LXNpemU6ICAgICAgICAgICAgICAgIDJyZW0gLy8gbm90IHVzZWRcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAgICAgICAgIHVybCguL2ljb25zL21rdHMtdG9vbC1oYW5kLnBuZylcbiAgICB3aWR0aDogICAgICAgICAgICAgICAgICAgIDJyZW1cbiAgICBoZWlnaHQ6ICAgICAgICAgICAgICAgICAgIDJyZW1cbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogICAgICAgIG5vLXJlcGVhdFxuICAgIGJhY2tncm91bmQtc2l6ZTogICAgICAgICAgMTAwJVxuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgICAgYmxvY2tcblxuICBib2R5LmN1cnNvci1kZWZhdWx0XG4gICAgY3Vyc29yOiAgICAgICAgICAgICAgICAgICBkZWZhdWx0XG5cbiAgYm9keS5jdXJzb3ItaGFuZFxuICAgIGN1cnNvcjogICAgICAgICAgICAgICAgICAgdXJsKC4vaWNvbnMvbWt0cy10b29sLWhhbmQtY3Vyc29yLnBuZyksIGF1dG9cblxuICBib2R5LmdyYWJiaW5nXG4gICAgY3Vyc29yOiAgICAgICAgICAgICAgICAgICB1cmwoLi9pY29ucy9ta3RzLXRvb2wtaGFuZC1ncmFiYmluZy1jdXJzb3IucG5nKSwgYXV0b1xuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogTUFURVJJQUxERVNJR04tQ1NTIEJVVFRPTlMgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1lZGlhIHNjcmVlblxuICAuYnRuXG4gICAgZGlzcGxheTogICAgICAgICAgICAgICAgYmxvY2tcbiAgICB3aWR0aDogICAgICAgICAgICAgICAgICAxMDAlXG4gICAgLy8gaGVpZ2h0OiAgICAgICAgICAgICAgICAgMTAwJVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtZWRpYSBwcmludFxuICAuYnRuXG4gICAgZGlzcGxheTogICAgICAgICAgICAgICAgbm9uZVxuXG5cblxuIiwiXG5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiBFeHBlcmltZW50YWxseSBkZXRlY3RlZCB0aGF0IGAkcGFwZXItaGVpZ2h0ID0gMjk3bW0gLSAwLjEzbW1gIGlzIG5vdCBlbm91Z2ggYnV0XG4gIGAyOTdtbSAtIDAuMTVtbWAgaXMgZW5vdWdoIHRvIGF2b2lkIGludGVydmVuaW5nIGJsYW5rIHBhZ2VzIGluIHRoZSBQREYuICovXG4kcGFwZXItd2lkdGggICAgICAgICAgICAgICAgPSAyMTBtbVxuJHBhcGVyLWhlaWdodCAgICAgICAgICAgICAgID0gMjk3bW0gLSAwLjE1bW1cbi8vICRwYXBlci13aWR0aCAgICAgICAgICAgICAgICA9IDIxMG1tXG4vLyAkcGFwZXItaGVpZ2h0ICAgICAgICAgICAgICAgPSAyOTdtbVxuLyogLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICovXG4vLyAnZ3V0dGVycycgaW4gdHlwb2dyYXBoaWMgdGVybXMgKG5vbi1wcmludGFibGUgYXJlYXMpIGJlY29tZSAncGFkZGluZ3MnIGluIENTUzpcbiRndXR0ZXItbGVmdCAgICAgICAgICAgICAgICA9IDQuNW1tXG4kZ3V0dGVyLXJpZ2h0ICAgICAgICAgICAgICAgPSAkZ3V0dGVyLWxlZnRcbiRndXR0ZXItdG9wICAgICAgICAgICAgICAgICA9IDhtbVxuJGd1dHRlci1ib3R0b20gICAgICAgICAgICAgID0gMTBtbVxuLyogLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICovXG4vLyAnbWFyZ2lucycgaW4gdHlwb2dyYXBoaWMgdGVybXMgKGFyZWFzIG91dHNpZGUgdGhlIG1haW4gY29udGVudCkgYmVjb21lICdwYWRkaW5ncycgaW4gQ1NTOlxuJG1hcmdpbi1sZWZ0ICAgICAgICAgICAgICAgID0gMTVtbVxuJG1hcmdpbi1yaWdodCAgICAgICAgICAgICAgID0gJG1hcmdpbi1sZWZ0XG4kbWFyZ2luLXRvcCAgICAgICAgICAgICAgICAgPSAxMW1tXG4kbWFyZ2luLWJvdHRvbSAgICAgICAgICAgICAgPSA1bW1cbi8qIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLiAqL1xuLy8gdGhlIGNoYXNlIHJlcHJlc2VudHMgdGhlIHByaW50YWJsZSBhcmVhOyBpbnNpZGUsIGZsYW5rZWQgYnkgdGhlIG1hcmdpbnMsIGlzIHRoZSBtYWluIGNvbnRlbnQgYXJlYTpcbiRjaGFzZS13aWR0aCAgICAgICAgICAgICAgICA9ICRwYXBlci13aWR0aCAgLSAkZ3V0dGVyLWxlZnQgIC0gJGd1dHRlci1yaWdodFxuJGNoYXNlLWhlaWdodCAgICAgICAgICAgICAgID0gJHBhcGVyLWhlaWdodCAtICRndXR0ZXItdG9wICAgLSAkZ3V0dGVyLWJvdHRvbVxuLyogLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICovXG4kZ2FsbGV5LXdpZHRoICAgICAgICAgICAgICAgPSAkcGFwZXItd2lkdGhcblxuLy8gLyogLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICovXG4vLyAvLyA+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj5cbi8vICRjb250ZW50LXdpZHRoICAgICAgICAgICAgICA9ICRwYWdlLXdpZHRoICAgLSAkbWFyZ2luLWxlZnQgIC0gJG1hcmdpbi1yaWdodFxuLy8gJGNvbnRlbnQtaGVpZ2h0ICAgICAgICAgICAgID0gJHBhZ2UtaGVpZ2h0ICAtICRtYXJnaW4tdG9wICAgLSAkbWFyZ2luLWJvdHRvbVxuLy8gLy8gPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+XG5cbi8vICRnYWxsZXktd2lkdGggICAgICAgICAgICAgICA9ICRwYWdlLXdpZHRoICAgLSAkbWFyZ2luLWxlZnQgIC0gJG1hcmdpbi1yaWdodFxuLy8gJGdhbGxleS1oZWlnaHQgICAgICAgICAgICAgID0gJHBhZ2UtaGVpZ2h0ICAtICRtYXJnaW4tdG9wICAgLSAkbWFyZ2luLWJvdHRvbVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbnBhcGVyXG5wYWdlXG4gIHdpZHRoOiAgICAgICAgICAgICAgICAgICRwYXBlci13aWR0aFxuICBoZWlnaHQ6ICAgICAgICAgICAgICAgICAkcGFwZXItaGVpZ2h0XG4gIGRpc3BsYXk6ICAgICAgICAgICAgICAgIGZsZXhcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5nYWxsZXlcbiAgZGlzcGxheTogICAgICAgICAgICAgICAgbm9uZVxuICBtaW4taGVpZ2h0OiAgICAgICAgICAgICAxMG1tXG4gIHdpZHRoOiAgICAgICAgICAgICAgICAgICRwYXBlci13aWR0aFxuICBmbG9hdDogICAgICAgICAgICAgICAgICBsZWZ0XG4gIGhlaWdodDogICAgICAgICAgICAgICAgIGF1dG9cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5jaGFzZVxuICBwb3NpdGlvbjogICAgICAgICAgICAgICByZWxhdGl2ZVxuICBsZWZ0OiAgICAgICAgICAgICAgICAgICAkZ3V0dGVyLWxlZnRcbiAgdG9wOiAgICAgICAgICAgICAgICAgICAgJGd1dHRlci10b3BcbiAgd2lkdGg6ICAgICAgICAgICAgICAgICAgJGNoYXNlLXdpZHRoXG4gIGhlaWdodDogICAgICAgICAgICAgICAgICRjaGFzZS1oZWlnaHRcbiAgZGlzcGxheTogICAgICAgICAgICAgICAgZmxleFxuICBmbGV4LWRpcmVjdGlvbjogICAgICAgICBjb2x1bW5cbiAgZmxvYXQ6ICAgICAgICAgICAgICAgICAgbGVmdFxuICAvLyBvdmVyZmxvdzogICAgICAgICAgICAgICBhdXRvXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuZ2FsbGV5IGNoYXNlXG4gIGhlaWdodDogICAgICAgICAgICAgICAgIGF1dG9cbiAgdG9wOiAgICAgICAgICAgICAgICAgICAgMFxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtZWRpYSBzY3JlZW5cbiAgcGFwZXJcbiAgcGFnZVxuICBnYWxsZXlcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgICAgICAkcGFwZXItd2hpdGVcbiAgICBib3gtc2hhZG93ICAgICAgICAgICAgICAxMHB4IDEwcHggMzVweCAwcHggcmdiYSgwLDAsMCwwLjUpXG4gICAgZmxvYXQ6ICAgICAgICAgICAgICAgICAgbGVmdFxuICAgIG1hcmdpbjogICAgICAgICAgICAgICAgIDEwbW1cbiAgICBwb3NpdGlvbjogICAgICAgICAgICAgICByZWxhdGl2ZVxuXG4gIGdhbGxleVxuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgIGZsZXhcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgcHJpbnRcbiAgcGFwZXJcbiAgcGFnZVxuICAgIG92ZXJmbG93OiAgICAgICAgICAgICAgIGhpZGRlblxuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6ICAgICAgIGFsd2F5c1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIEJPWEVTLCBDT0xVTU5TICYgR0FQUyAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5ib3hcbmhib3hcbiAgZmxleC1zaHJpbms6ICAgICAgICAgICAgMVxuICBmbGV4LWdyb3c6ICAgICAgICAgICAgICAxXG4gIGRpc3BsYXk6ICAgICAgICAgICAgICAgIGZsZXhcbiAgZmxleC1kaXJlY3Rpb246ICAgICAgICAgcm93XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xudmJveFxuICBmbGV4LXNocmluazogICAgICAgICAgICAxXG4gIGZsZXgtZ3JvdzogICAgICAgICAgICAgIDFcbiAgZGlzcGxheTogICAgICAgICAgICAgICAgZmxleFxuICBmbGV4LWRpcmVjdGlvbjogICAgICAgICBjb2x1bW5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5jb2x1bW5cbiAgLy8gaGVpZ2h0OiAgICAgICAgICAgICAgICAgMTAwJVxuICAvKiBOb21pbmFsIHdpZHRoIHNvIGFsbCBjb2x1bW5zIGluIGEgZmxleCBib3ggaGF2ZSB0aGUgc2FtZSB3aWR0aCByZWdhcmRsZXNzIG9mIGNvbnRlbnQ6ICovXG4gIHdpZHRoOiAgICAgICAgICAgICAgICAgIDFtbVxuICBmbGV4LXNocmluazogICAgICAgICAgICAxXG4gIGZsZXgtZ3JvdzogICAgICAgICAgICAgIDFcbiAgLyogYHBvc2l0aW9uOiByZWxhdGl2ZWAgbmVlZGVkIGZvciBjb3JrcyAqL1xuICBwb3NpdGlvbjogICAgICAgICAgICAgICByZWxhdGl2ZVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmhnYXBcbiAgd2lkdGg6ICAgICAgICAgICAgICAgICAgMTAwJVxuICBmbGV4LXNocmluazogICAgICAgICAgICAxXG4gIGZsZXgtZ3JvdzogICAgICAgICAgICAgIDFcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG54aGdhcFxuICB3aWR0aDogICAgICAgICAgICAgICAgICAxMDAlXG4gIGZsZXgtc2hyaW5rOiAgICAgICAgICAgIDEwMDAwMDBcbiAgZmxleC1ncm93OiAgICAgICAgICAgICAgMTAwMDAwMFxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbnZnYXBcbiAgd2lkdGg6ICAgICAgICAgICAgICAgICAgNW1tXG4gIC8vIGhlaWdodDogICAgICAgICAgICAgICAgIDEwMCVcbiAgbWluLXdpZHRoOiAgICAgICAgICAgICAgNW1tXG4gIG1heC13aWR0aDogICAgICAgICAgICAgIDVtbVxuICBmbGV4LXNocmluazogICAgICAgICAgICAwXG4gIGZsZXgtZ3JvdzogICAgICAgICAgICAgIDBcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIGdhcFxuICB2Z2FwXG4gIGhnYXBcbiAgeGhnYXBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgICAgICAkZ3JheVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogTUFSR0lOUyAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5sZWZ0bWFyZ2luXG5yaWdodG1hcmdpblxuICBmbGV4LXNocmluazogICAgICAgICAgICAwXG4gIGZsZXgtZ3JvdzogICAgICAgICAgICAgIDBcblxubGVmdG1hcmdpblxuICBtaW4td2lkdGg6ICAgICAgICAgICAgICAkbWFyZ2luLWxlZnRcbiAgbWF4LXdpZHRoOiAgICAgICAgICAgICAgJG1hcmdpbi1sZWZ0XG5cbnJpZ2h0bWFyZ2luXG4gIG1pbi13aWR0aDogICAgICAgICAgICAgICRtYXJnaW4tcmlnaHRcbiAgbWF4LXdpZHRoOiAgICAgICAgICAgICAgJG1hcmdpbi1yaWdodFxuXG50b3BtYXJnaW5cbmJvdHRvbW1hcmdpblxuICB3aWR0aDogICAgICAgICAgICAgICAgICAxMDAlXG4gIGZsZXgtc2hyaW5rOiAgICAgICAgICAgIDBcbiAgZmxleC1ncm93OiAgICAgICAgICAgICAgMFxuXG50b3BtYXJnaW5cbiAgbWluLWhlaWdodDogICAgICAgICAgICAgJG1hcmdpbi10b3BcbiAgbWF4LWhlaWdodDogICAgICAgICAgICAgJG1hcmdpbi10b3BcblxuYm90dG9tbWFyZ2luXG4gIG1pbi1oZWlnaHQ6ICAgICAgICAgICAgICRtYXJnaW4tYm90dG9tXG4gIG1heC1oZWlnaHQ6ICAgICAgICAgICAgICRtYXJnaW4tYm90dG9tXG5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWVkaWEgc2NyZWVuXG4gIGxlZnRtYXJnaW5cbiAgcmlnaHRtYXJnaW5cbiAgdG9wbWFyZ2luXG4gIGJvdHRvbW1hcmdpblxuICAgIGJhY2tncm91bmQtY29sb3I6ICAgICAgICRncmF5XG5cblxuXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xubGluZVxuICBwb3NpdGlvbjogICAgICAgICAgICAgICBhYnNvbHV0ZVxuICBsaW5lLWhlaWdodDogICAgICAgICAgICA1bW1cbiAgaGVpZ2h0OiAgICAgICAgICAgICAgICAgNW1tXG4gIG1pbi1oZWlnaHQ6ICAgICAgICAgICAgIDVtbVxuICBtYXgtaGVpZ2h0OiAgICAgICAgICAgICA1bW1cblxucFxuaDFcbmgyXG5oM1xuICBsaW5lLWhlaWdodDogICAgICAgICAgICA1bW1cbiAgdGV4dC1hbGlnbjogICAgICAgICAgICAganVzdGlmeVxuICBsZXR0ZXItc3BhY2luZzogICAgICAgICAtMC4wNWV4XG4gIHdvcmQtc3BhY2luZzogICAgICAgICAgIDBleFxuICAvLyB3b3JkLXNwYWNpbmc6ICAgICAgICAgICAtMC41ZXhcblxucDpiZWZvcmVcbiAgLyogIyMjIE5CIGZpeGVkLXdpZHRoIHNwYWNlIHVzZWQgaGVyZTsgc2VlIGUuZy4gaHR0cHM6Ly93d3cuY3MudHV0LmZpL35qa29ycGVsYS9jaGFycy9zcGFjZXMuaHRtbC4gIyMjICovXG4gIGNvbnRlbnQ6ICAgICAgICAgICAgICAgICfDosKAwoEnXG4gIC8vIGNvbnRlbnQ6ICAgICAgICAgICAgICAgICfDosKdwqHDosKAwoEnXG4gIC8vIGNvbG9yOiAgICAgICAgICAgICAgICAgIGdyZWVuXG4gIC8vIHA6YWZ0ZXJcbiAgLy8gICBjb250ZW50OiAgICAgICAgICAgICAgICAnw6LCncKhICdcbiAgLy8gICBjb2xvcjogICAgICAgICAgICAgICAgICByZWRcblxueGJpZ1xuICBmb250LXNpemU6ICAgICAgICAgICAgICAyMDAlXG5cbnhzbWFsbFxuICBmb250LXNpemU6ICAgICAgICAgICAgICA1MCVcblxuaHRtbCwgYm9keVxuICBmb250LWZhbWlseTogICAgICAgICAgICAnY2prJywgJ2xhdGluJywgJ2xhc3RyZXNvcnQnXG5cbnN0cm9uZ1xuYlxuaDFcbmgyXG5oM1xuICBmb250LWZhbWlseTogICAgICAgICAgICAnSW1wYWN0J1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIERPQ1VNRU5ULVNQRUNJRklDIFNUVUZGIHdoaWNoIHNob3VsZCByZWFsbHkgZ2V0IGl0cyBvd24gc3R5bGVzaGVldCAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5rd2ljLWxpbmV1cFxuICBkaXNwbGF5OiAgICAgICAgICAgICAgICBibG9ja1xuICB3aGl0ZS1zcGFjZTogICAgICAgICAgICBub3dyYXBcbiAgZm9udC1mYW1pbHk6ICAgICAgICAgICAgJ2NqaydcblxuXG4iLCJcblxuXG5cbkBtZWRpYSBzY3JlZW5cbiAgYm94XG4gIGhib3hcbiAgdmJveFxuICByaWJib25cbiAgaHJpYmJvblxuICB2cmliYm9uXG4gIGxlZnRtYXJnaW5cbiAgcmlnaHRtYXJnaW5cbiAgdG9wbWFyZ2luXG4gIGJvdHRvbW1hcmdpblxuICBnYXBcbiAgdmdhcFxuICBoZ2FwXG4gIHhoZ2FwXG4gICAgb3V0bGluZTogICAgICAgICAgICAgICAgMXB4IGRvdHRlZCByZWRcbiAgICBvdXRsaW5lLW9mZnNldDogICAgICAgICAtMXB4XG4gICAgLy8gb3V0bGluZS1vZmZzZXQ6ICAgICAgICAgLTAuNXB4XG5cblxuXG5cblxuIiwiaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cbioge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tICFpbXBvcnRhbnQ7XG59XG5odG1sIHtcbiAgbGV0dGVyLXNwYWNpbmc6IDBleDtcbiAgd29yZC1zcGFjaW5nOiAwZW07XG59XG5zcGxhc2gsXG5yaWJib24sXG50b29sLFxucGFuZWwsXG5ncmlwLFxub3ZlcmxheSxcbmJ1dHRvbixcbnRhYmxldG9wLFxuYXJ0Ym9hcmQsXG5nYWxsZXksXG5wYXBlcixcbnBhZ2UsXG5jaGFzZSxcbmJveCxcbmNvbHVtbixcbmdhcCxcbmxpbmUsXG5jb3JrLFxuem9vbWVyLFxubGVmdG1hcmdpbixcbnJpZ2h0bWFyZ2luLFxudG9wbWFyZ2luLFxuYm90dG9tbWFyZ2luIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdsYXRpbic7XG4gIHNyYzogdXJsKFwiLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kMTItUmVndWxhci50dGZcIik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdsYXRpbic7XG4gIHNyYzogdXJsKFwiLi9mb250cy9FQkdhcmFtb25kLTAuMDE2LXdlYi9FQkdhcmFtb25kMTItSXRhbGljLnR0ZlwiKTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnbGFzdHJlc29ydCc7XG4gIHNyYzogdXJsKFwiLi9mb250cy9MYXN0UmVzb3J0LnR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnc3BpbmN5Y2xlLWVvdCc7XG4gIHNyYzogdXJsKFwiLi9mb250cy9zcGluY3ljbGUvc3BpbmN5Y2xlX290LmVvdFwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnc3BpbmN5Y2xlLXdvZmYyJztcbiAgc3JjOiB1cmwoXCIuL2ZvbnRzL3NwaW5jeWNsZS9zcGluY3ljbGVfb3Qud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3NwaW5jeWNsZS13b2ZmJztcbiAgc3JjOiB1cmwoXCIuL2ZvbnRzL3NwaW5jeWNsZS9zcGluY3ljbGVfb3Qud29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnc3BpbmN5Y2xlLXRydWV0eXBlJztcbiAgc3JjOiB1cmwoXCIuL2ZvbnRzL3NwaW5jeWNsZS9zcGluY3ljbGVfb3QudHRmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdjamsnO1xuICBzcmM6IHVybChcIi4vZm9udHMvTGFzdFJlc29ydC50dGZcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDJlODAtMDJlZmYsIFUrMDJmMDAtMDJmZGYsIFUrMDMwMDAtMDMwM2YsIFUrMDMxYzAtMDMxZWYsIFUrMDMyMDAtMDMyZmYsIFUrMDMzMDAtMDMzZmYsIFUrMDM0MDAtMDRkYmYsIFUrMDRlMDAtMDlmZmYsIFUrMGY5MDAtMGZhZmYsIFUrMGZlMzAtMGZlNGYsIFUrMjAwMDAtMmE2ZGYsIFUrMmE3MDAtMmI3M2YsIFUrMmI3NDAtMmI4MWYsIFUrMmY4MDAtMmZhMWY7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdjamsnO1xuICBzcmM6IGxvY2FsKCdTdW4tRXh0QScpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAyZTgwLTAyZWZmLCBVKzAyZjAwLTAyZmRmLCBVKzAzMDAwLTAzMDNmLCBVKzAzMWMwLTAzMWVmLCBVKzAzMjAwLTAzMmZmLCBVKzAzMzAwLTAzM2ZmLCBVKzAzNDAwLTA0ZGJmLCBVKzA0ZTAwLTA5ZmZmLCBVKzBmOTAwLTBmYWZmLCBVKzBmZTMwLTBmZTRmLCBVKzJmODAwLTJmYTFmO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnY2prJztcbiAgc3JjOiBsb2NhbCgnc3VuZmxvd2VyLXUtY2prLXhiJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMjAwMDAtMmI4MWY7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdjamsnO1xuICBzcmM6IGxvY2FsKCdqaXp1cmEzYicpO1xuICB1bmljb2RlLXJhbmdlOiBVK2UwMDAtZjhmZjtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2p6ci1iYWJlbCc7XG4gIHNyYzogbG9jYWwoJ0JhYmVsU3RvbmUgSGFuJyk7XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgYXJ0Ym9hcmQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL2JhY2tncm91bmRfbGluZW5fbGltZS5wbmdcIik7XG4gICAgbWluLXdpZHRoOiAxMDAwbW07XG4gICAgcGFkZGluZzogNTBtbTtcbiAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgYXJ0Ym9hcmQuZ2FsbGV5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgem9vbWVyIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiB7XG4gIG92ZXJsYXkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEwbW07XG4gICAgbGVmdDogMTBtbTtcbiAgICBjb2xvcjogcmdiYSgxMDAsMTAwLDEwMCwwLjI1KTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBmb250LWZhbWlseTogXCJDZW50dXJ5IFNjaG9vbGJvb2tcIjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAzMG1tO1xuICB9XG59XG5AbWVkaWEgcHJpbnQge1xuICBvdmVybGF5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgYm9keSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1OTU5NDQ7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4ge1xuICByaWJib24sXG4gIHZyaWJib24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICBocmliYm9uIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiA1bW07XG4gICAgbGVmdDogNW1tO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAtbWt0cy1kcmFnZ2FibGU6IHh5O1xuICAgIHJlc2l6ZTogYm90aDtcbiAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgcmliYm9uLFxuICBocmliYm9uLFxuICB2cmliYm9uIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgLmd1aS1jb25zb2xlIHtcbi8qICMjIyBUQUlOVCBtYWtlIHJlc2l6YWJsZSwgaGlkZWFibGUgIyMjICovXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA1MG1tO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTAsNTAsNTAsMC45KTtcbiAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgLmd1aS1jb25zb2xlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgaS5ta3RzLXRvb2wtaGFuZCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vaWNvbnMvbWt0cy10b29sLWhhbmQucG5nXCIpO1xuICAgIHdpZHRoOiAycmVtO1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICBib2R5LmN1cnNvci1kZWZhdWx0IHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gIH1cbiAgYm9keS5jdXJzb3ItaGFuZCB7XG4gICAgY3Vyc29yOiB1cmwoXCIuL2ljb25zL21rdHMtdG9vbC1oYW5kLWN1cnNvci5wbmdcIiksIGF1dG87XG4gIH1cbiAgYm9keS5ncmFiYmluZyB7XG4gICAgY3Vyc29yOiB1cmwoXCIuL2ljb25zL21rdHMtdG9vbC1oYW5kLWdyYWJiaW5nLWN1cnNvci5wbmdcIiksIGF1dG87XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4ge1xuICAuYnRuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgLmJ0biB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxucGFwZXIsXG5wYWdlIHtcbiAgd2lkdGg6IDIxMG1tO1xuICBoZWlnaHQ6IDI5Ni44NW1tO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuZ2FsbGV5IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWluLWhlaWdodDogMTBtbTtcbiAgd2lkdGg6IDIxMG1tO1xuICBmbG9hdDogbGVmdDtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuY2hhc2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDQuNW1tO1xuICB0b3A6IDhtbTtcbiAgd2lkdGg6IDIwMW1tO1xuICBoZWlnaHQ6IDI3OC44NW1tO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbG9hdDogbGVmdDtcbn1cbmdhbGxleSBjaGFzZSB7XG4gIGhlaWdodDogYXV0bztcbiAgdG9wOiAwO1xufVxuQG1lZGlhIHNjcmVlbiB7XG4gIHBhcGVyLFxuICBwYWdlLFxuICBnYWxsZXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XG4gICAgYm94LXNoYWRvdzogMTBweCAxMHB4IDM1cHggMHB4IHJnYmEoMCwwLDAsMC41KTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW46IDEwbW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIGdhbGxleSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgcGFwZXIsXG4gIHBhZ2Uge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcGFnZS1icmVhay1hZnRlcjogYWx3YXlzO1xuICB9XG59XG5ib3gsXG5oYm94IHtcbiAgZmxleC1zaHJpbms6IDE7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cbnZib3gge1xuICBmbGV4LXNocmluazogMTtcbiAgZmxleC1ncm93OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuY29sdW1uIHtcbi8qIE5vbWluYWwgd2lkdGggc28gYWxsIGNvbHVtbnMgaW4gYSBmbGV4IGJveCBoYXZlIHRoZSBzYW1lIHdpZHRoIHJlZ2FyZGxlc3Mgb2YgY29udGVudDogKi9cbiAgd2lkdGg6IDFtbTtcbiAgZmxleC1zaHJpbms6IDE7XG4gIGZsZXgtZ3JvdzogMTtcbi8qIGBwb3NpdGlvbjogcmVsYXRpdmVgIG5lZWRlZCBmb3IgY29ya3MgKi9cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuaGdhcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBmbGV4LXNocmluazogMTtcbiAgZmxleC1ncm93OiAxO1xufVxueGhnYXAge1xuICB3aWR0aDogMTAwJTtcbiAgZmxleC1zaHJpbms6IDEwMDAwMDA7XG4gIGZsZXgtZ3JvdzogMTAwMDAwMDtcbn1cbnZnYXAge1xuICB3aWR0aDogNW1tO1xuICBtaW4td2lkdGg6IDVtbTtcbiAgbWF4LXdpZHRoOiA1bW07XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBmbGV4LWdyb3c6IDA7XG59XG5AbWVkaWEgc2NyZWVuIHtcbiAgZ2FwLFxuICB2Z2FwLFxuICBoZ2FwLFxuICB4aGdhcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDAsMTAwLDEwMCwwLjI1KTtcbiAgfVxufVxubGVmdG1hcmdpbixcbnJpZ2h0bWFyZ2luIHtcbiAgZmxleC1zaHJpbms6IDA7XG4gIGZsZXgtZ3JvdzogMDtcbn1cbmxlZnRtYXJnaW4ge1xuICBtaW4td2lkdGg6IDE1bW07XG4gIG1heC13aWR0aDogMTVtbTtcbn1cbnJpZ2h0bWFyZ2luIHtcbiAgbWluLXdpZHRoOiAxNW1tO1xuICBtYXgtd2lkdGg6IDE1bW07XG59XG50b3BtYXJnaW4sXG5ib3R0b21tYXJnaW4ge1xuICB3aWR0aDogMTAwJTtcbiAgZmxleC1zaHJpbms6IDA7XG4gIGZsZXgtZ3JvdzogMDtcbn1cbnRvcG1hcmdpbiB7XG4gIG1pbi1oZWlnaHQ6IDExbW07XG4gIG1heC1oZWlnaHQ6IDExbW07XG59XG5ib3R0b21tYXJnaW4ge1xuICBtaW4taGVpZ2h0OiA1bW07XG4gIG1heC1oZWlnaHQ6IDVtbTtcbn1cbkBtZWRpYSBzY3JlZW4ge1xuICBsZWZ0bWFyZ2luLFxuICByaWdodG1hcmdpbixcbiAgdG9wbWFyZ2luLFxuICBib3R0b21tYXJnaW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAwLDEwMCwxMDAsMC4yNSk7XG4gIH1cbn1cbmxpbmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxpbmUtaGVpZ2h0OiA1bW07XG4gIGhlaWdodDogNW1tO1xuICBtaW4taGVpZ2h0OiA1bW07XG4gIG1heC1oZWlnaHQ6IDVtbTtcbn1cbnAsXG5oMSxcbmgyLFxuaDMge1xuICBsaW5lLWhlaWdodDogNW1tO1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDVleDtcbiAgd29yZC1zcGFjaW5nOiAwZXg7XG59XG5wOmJlZm9yZSB7XG4vKiAjIyMgTkIgZml4ZWQtd2lkdGggc3BhY2UgdXNlZCBoZXJlOyBzZWUgZS5nLiBodHRwczovL3d3dy5jcy50dXQuZmkvfmprb3JwZWxhL2NoYXJzL3NwYWNlcy5odG1sLiAjIyMgKi9cbiAgY29udGVudDogJ+KAgSc7XG59XG54YmlnIHtcbiAgZm9udC1zaXplOiAyMDAlO1xufVxueHNtYWxsIHtcbiAgZm9udC1zaXplOiA1MCU7XG59XG5odG1sLFxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnY2prJywgJ2xhdGluJywgJ2xhc3RyZXNvcnQnO1xufVxuc3Ryb25nLFxuYixcbmgxLFxuaDIsXG5oMyB7XG4gIGZvbnQtZmFtaWx5OiAnSW1wYWN0Jztcbn1cbmt3aWMtbGluZXVwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtZmFtaWx5OiAnY2prJztcbn1cbkBtZWRpYSBzY3JlZW4ge1xuICBib3gsXG4gIGhib3gsXG4gIHZib3gsXG4gIHJpYmJvbixcbiAgaHJpYmJvbixcbiAgdnJpYmJvbixcbiAgbGVmdG1hcmdpbixcbiAgcmlnaHRtYXJnaW4sXG4gIHRvcG1hcmdpbixcbiAgYm90dG9tbWFyZ2luLFxuICBnYXAsXG4gIHZnYXAsXG4gIGhnYXAsXG4gIHhoZ2FwIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkICNmMDA7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0xcHg7XG4gIH1cbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltMXJkSE10Wm1sNFpYTXVjM1I1YkNJc0ltMXJkSE10WTNWemRHOXRMV1ZzWlcxbGJuUnpMbk4wZVd3aUxDSnRhM1J6TFdadmJuUnpMbk4wZVd3aUxDSnRhM1J6TFdadmJuUnpMV05xYXk1emRIbHNJaXdpYld0MGN5MW5kV2t1YzNSNWJDSXNJbTFyZEhNdGJHRjViM1YwTG5OMGVXd2lMQ0p0YTNSekxXUmxkaTV6ZEhsc0lsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFWRkJPMFZCUTBVc1dVRkJXU3hYUVVGYU96dEJRVVZHTzBGQlFVYzdRVUZCVlR0RlFVTllMRmxCUVZrc1VVRkJXanM3UVVGTlJqdEZRVU5GTEdkQ1FVRjNRaXhyUWtGQmVFSTdPMEZCUzBZN1JVRkRSU3huUWtGQmQwSXNTVUZCZUVJN1JVRkRRU3hqUVVGM1FpeEpRVUY0UWpzN1FVTjBRa1k3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHRCUVVOQk8wRkJTVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0RlFVVkZMRk5CUVhkQ0xFMUJRWGhDT3p0QlExUkdPMFZCUTBrc1lVRkJjMElzVVVGQmRFSTdSVUZEUVN4TFFVRnRSaXcyUkVGQmJrWTdPMEZCUlVvN1JVRkRTU3hoUVVGelFpeFJRVUYwUWp0RlFVTkJMRXRCUVd0R0xEUkVRVUZzUmp0RlFVTkJMRmxCUVhOQ0xFOUJRWFJDT3p0QlFXbENTanRGUVVORkxHRkJRWGRDTEdGQlFYaENPMFZCUTBFc1MwRkJjMFFzT0VKQlFYUkVPMFZCUTBFc1lVRkJkMElzVDBGQmVFSTdSVUZEUVN4WlFVRjNRaXhQUVVGNFFqczdRVUZOUmp0RlFVTkZMR0ZCUVRSQ0xHZENRVUUxUWp0RlFVTkJMRXRCUVc5RkxEQkRRVUZ3UlR0RlFVTkJMR0ZCUVRSQ0xFOUJRVFZDTzBWQlEwRXNXVUZCTkVJc1QwRkJOVUk3TzBGQlJVWTdSVUZEUlN4aFFVRTBRaXhyUWtGQk5VSTdSVUZEUVN4TFFVRnpSU3cwUTBGQmRFVTdSVUZEUVN4aFFVRTBRaXhQUVVFMVFqdEZRVU5CTEZsQlFUUkNMRTlCUVRWQ096dEJRVVZHTzBWQlEwVXNZVUZCTkVJc2FVSkJRVFZDTzBWQlEwRXNTMEZCY1VVc01rTkJRWEpGTzBWQlEwRXNZVUZCTkVJc1QwRkJOVUk3UlVGRFFTeFpRVUUwUWl4UFFVRTFRanM3UVVGRlJqdEZRVU5GTEdGQlFUUkNMSEZDUVVFMVFqdEZRVU5CTEV0QlFXOUZMREJEUVVGd1JUdEZRVU5CTEdGQlFUUkNMRTlCUVRWQ08wVkJRMEVzV1VGQk5FSXNUMEZCTlVJN08wRkRNVVZHTzBWQlEwVXNZVUZCZDBJc1RVRkJlRUk3UlVGRFFTeExRVUZ6UkN3NFFrRkJkRVE3UlVGRFFTeGxRVU5wUXl4cFRrRkVha003TzBGQmFVSkdPMFZCUTBVc1lVRkJkMElzVFVGQmVFSTdSVUZEUVN4TFFVRXdReXhyUWtGQk1VTTdSVUZGUVN4bFFVTnBReXh2UzBGRWFrTTdPMEZCWVVZN1JVRkRSU3hoUVVGM1FpeE5RVUY0UWp0RlFVTkJMRXRCUVc5RUxEUkNRVUZ3UkR0RlFVTkJMR1ZCUTI5Q0xHTkJSSEJDT3p0QlFVZEdPMFZCUTBVc1lVRkJkMElzVFVGQmVFSTdSVUZEUVN4TFFVRXdReXhyUWtGQk1VTTdSVUZEUVN4bFFVRjNRaXhaUVVGNFFqczdRVUZGUmp0RlFVTkZMR0ZCUVhkQ0xGbEJRWGhDTzBWQlEwRXNTMEZCWjBRc2QwSkJRV2hFT3p0QlF5OURTenRCUVVOTU8wbEJRMFVzVlVGQmQwSXNVMEZCZUVJN1NVRkRRU3hyUWtGQk1rUXNiVU5CUVRORU8wbEJRMEVzVjBGQmQwSXNUMEZCZUVJN1NVRkRRU3hUUVVGM1FpeExRVUY0UWpzN08wRkJSMGM3UVVGRFREdEpRVU5GTEZOQlFYZENMRXRCUVhoQ096czdRVUZOUnp0QlFVTk1PMGxCUTBVc1ZVRkJkMElzUzBGQmVFSTdPenRCUVZOSE8wRkJRMHc3U1VGRFJTeFRRVUYzUWl4TlFVRjRRanRKUVVOQkxGVkJRWGRDTEZOQlFYaENPMGxCUTBFc1MwRkJkMElzUzBGQmVFSTdTVUZEUVN4TlFVRjNRaXhMUVVGNFFqdEpRVU5CTEU5QlFYZENMSFZDUVVGNFFqdEpRVU5CTEdkQ1FVRjNRaXhMUVVGNFFqdEpRVU5CTEdGQlFYZENMSEZDUVVGNFFqdEpRVU5CTEZsQlFYZENMRTlCUVhoQ08wbEJRMEVzWVVGQmQwSXNTMEZCZUVJN1NVRkRRU3hYUVVGM1FpeExRVUY0UWpzN08wRkJSMGM3UVVGRFREdEpRVU5GTEZOQlFYZENMRXRCUVhoQ096czdRVUZMUnp0QlFVTk1PMGxCUTBVc1UwRkJkMElzUzBGQmVFSTdTVUZEUVN4blFrRkJkMElzVDBGQmVFSTdTVUZEUVN4clFrRkJkMElzVVVGQmVFSTdPenRCUVUxSE8wRkJRMHc3UVVGRFFUdEpRVU5GTEZOQlFYZENMRXRCUVhoQ08wbEJRMEVzWjBKQlFYZENMRTlCUVhoQ096dEJRVVZHTzBsQlEwVXNWVUZCZDBJc1RVRkJlRUk3U1VGRFFTeExRVUYzUWl4SlFVRjRRanRKUVVOQkxFMUJRWGRDTEVsQlFYaENPMGxCUTBFc1UwRkJkMElzUzBGQmVFSTdTVUZEUVN4blFrRkJkMElzU1VGQmVFSTdTVUZEUVN4cFFrRkJkMElzUjBGQmVFSTdTVUZEUVN4UlFVRjNRaXhMUVVGNFFqczdPMEZCUjBjN1FVRkRURHRCUVVOQk8wRkJRMEU3U1VGRFJTeFRRVUYzUWl4TFFVRjRRanM3TzBGQlRVYzdRVUZEVER0QlFVTkZPMGxCUTBFc1QwRkJkMElzUzBGQmVFSTdTVUZEUVN4UlFVRjNRaXhMUVVGNFFqdEpRVU5CTEd0Q1FVRjNRaXh0UWtGQmVFSTdPenRCUVVkSE8wRkJRMHc3U1VGRFJTeFRRVUYzUWl4TFFVRjRRanM3TzBGQlRVYzdRVUZEVER0SlFVTkZMRmRCUVRCQ0xFdEJRVEZDTzBsQlEwRXNhMEpCUVhkRUxHdERRVUY0UkR0SlFVTkJMRTlCUVRCQ0xFdEJRVEZDTzBsQlEwRXNVVUZCTUVJc1MwRkJNVUk3U1VGRFFTeHRRa0ZCTUVJc1ZVRkJNVUk3U1VGRFFTeHBRa0ZCTUVJc1MwRkJNVUk3U1VGRFFTeFRRVUV3UWl4TlFVRXhRanM3UVVGRlJqdEpRVU5GTEZGQlFUQkNMRkZCUVRGQ096dEJRVVZHTzBsQlEwVXNVVUZCWjBVc0swTkJRV2hGT3p0QlFVVkdPMGxCUTBVc1VVRkJlVVVzZDBSQlFYcEZPenM3UVVGTlJ6dEJRVU5NTzBsQlEwVXNVMEZCZDBJc1RVRkJlRUk3U1VGRFFTeFBRVUYzUWl4TFFVRjRRanM3TzBGQlNVYzdRVUZEVER0SlFVTkZMRk5CUVhkQ0xFdEJRWGhDT3pzN1FVTnlSMG83UVVGRFFUdEZRVU5GTEU5QlFYZENMRTFCUVhoQ08wVkJRMEVzVVVGQmQwSXNVMEZCZUVJN1JVRkRRU3hUUVVGM1FpeExRVUY0UWpzN1FVRkhSanRGUVVORkxGTkJRWGRDTEV0QlFYaENPMFZCUTBFc1dVRkJkMElzUzBGQmVFSTdSVUZEUVN4UFFVRjNRaXhOUVVGNFFqdEZRVU5CTEU5QlFYZENMRXRCUVhoQ08wVkJRMEVzVVVGQmQwSXNTMEZCZUVJN08wRkJSMFk3UlVGRFJTeFZRVUYzUWl4VFFVRjRRanRGUVVOQkxFMUJRWGRDTEUxQlFYaENPMFZCUTBFc1MwRkJkMElzU1VGQmVFSTdSVUZEUVN4UFFVRjNRaXhOUVVGNFFqdEZRVU5CTEZGQlFYZENMRk5CUVhoQ08wVkJRMEVzVTBGQmQwSXNTMEZCZUVJN1JVRkRRU3huUWtGQmQwSXNUMEZCZUVJN1JVRkRRU3hQUVVGM1FpeExRVUY0UWpzN1FVRkpSanRGUVVORkxGRkJRWGRDTEV0QlFYaENPMFZCUTBFc1MwRkJkMElzUlVGQmVFSTdPMEZCUjBzN1FVRkRURHRCUVVOQk8wRkJRMEU3U1VGRFJTeHJRa0ZCZDBJc1VVRkJlRUk3U1VGRFFTeFpRVUYzUWl4dFEwRkJlRUk3U1VGRFFTeFBRVUYzUWl4TFFVRjRRanRKUVVOQkxGRkJRWGRDTEV0QlFYaENPMGxCUTBFc1ZVRkJkMElzVTBGQmVFSTdPMEZCUlVZN1NVRkRSU3hUUVVGM1FpeExRVUY0UWpzN08wRkJSMGM3UVVGRFREdEJRVU5CTzBsQlEwVXNWVUZCZDBJc1QwRkJlRUk3U1VGRFFTeHJRa0ZCZDBJc1QwRkJlRUk3T3p0QlFVdEtPMEZCUTBFN1JVRkRSU3hoUVVGM1FpeEZRVUY0UWp0RlFVTkJMRmRCUVhkQ0xFVkJRWGhDTzBWQlEwRXNVMEZCZDBJc1MwRkJlRUk3UlVGRFFTeG5Ra0ZCZDBJc1NVRkJlRUk3TzBGQlIwWTdSVUZEUlN4aFFVRjNRaXhGUVVGNFFqdEZRVU5CTEZkQlFYZENMRVZCUVhoQ08wVkJRMEVzVTBGQmQwSXNTMEZCZUVJN1JVRkRRU3huUWtGQmQwSXNUMEZCZUVJN08wRkJSMFk3UVVGRlJUdEZRVU5CTEU5QlFYZENMRWxCUVhoQ08wVkJRMEVzWVVGQmQwSXNSVUZCZUVJN1JVRkRRU3hYUVVGM1FpeEZRVUY0UWp0QlFVTkJPMFZCUTBFc1ZVRkJkMElzVTBGQmVFSTdPMEZCUjBZN1JVRkRSU3hQUVVGM1FpeExRVUY0UWp0RlFVTkJMR0ZCUVhkQ0xFVkJRWGhDTzBWQlEwRXNWMEZCZDBJc1JVRkJlRUk3TzBGQlIwWTdSVUZEUlN4UFFVRjNRaXhMUVVGNFFqdEZRVU5CTEdGQlFYZENMRkZCUVhoQ08wVkJRMEVzVjBGQmQwSXNVVUZCZUVJN08wRkJSMFk3UlVGRFJTeFBRVUYzUWl4SlFVRjRRanRGUVVWQkxGZEJRWGRDTEVsQlFYaENPMFZCUTBFc1YwRkJkMElzU1VGQmVFSTdSVUZEUVN4aFFVRjNRaXhGUVVGNFFqdEZRVU5CTEZkQlFYZENMRVZCUVhoQ096dEJRVWRMTzBGQlEwdzdRVUZEUVR0QlFVTkJPMEZCUTBFN1NVRkRSU3hyUWtGQmQwSXNkVUpCUVhoQ096czdRVUZOU2p0QlFVTkJPMFZCUTBVc1lVRkJkMElzUlVGQmVFSTdSVUZEUVN4WFFVRjNRaXhGUVVGNFFqczdRVUZGUmp0RlFVTkZMRmRCUVhkQ0xFdEJRWGhDTzBWQlEwRXNWMEZCZDBJc1MwRkJlRUk3TzBGQlJVWTdSVUZEUlN4WFFVRjNRaXhMUVVGNFFqdEZRVU5CTEZkQlFYZENMRXRCUVhoQ096dEJRVVZHTzBGQlEwRTdSVUZEUlN4UFFVRjNRaXhMUVVGNFFqdEZRVU5CTEdGQlFYZENMRVZCUVhoQ08wVkJRMEVzVjBGQmQwSXNSVUZCZUVJN08wRkJSVVk3UlVGRFJTeFpRVUYzUWl4TFFVRjRRanRGUVVOQkxGbEJRWGRDTEV0QlFYaENPenRCUVVWR08wVkJRMFVzV1VGQmQwSXNTVUZCZUVJN1JVRkRRU3haUVVGM1FpeEpRVUY0UWpzN1FVRkpTenRCUVVOTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBsQlEwVXNhMEpCUVhkQ0xIVkNRVUY0UWpzN08wRkJUVW83UlVGRFJTeFZRVUYzUWl4VFFVRjRRanRGUVVOQkxHRkJRWGRDTEVsQlFYaENPMFZCUTBFc1VVRkJkMElzU1VGQmVFSTdSVUZEUVN4WlFVRjNRaXhKUVVGNFFqdEZRVU5CTEZsQlFYZENMRWxCUVhoQ096dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMFZCUTBVc1lVRkJkMElzU1VGQmVFSTdSVUZEUVN4WlFVRjNRaXhSUVVGNFFqdEZRVU5CTEdkQ1FVRjNRaXhSUVVGNFFqdEZRVU5CTEdOQlFYZENMRWxCUVhoQ096dEJRVWRHTzBGQlEwVTdSVUZEUVN4VFFVRjNRaXhKUVVGNFFqczdRVUZQUmp0RlFVTkZMRmRCUVhkQ0xFdEJRWGhDT3p0QlFVVkdPMFZCUTBVc1YwRkJkMElzU1VGQmVFSTdPMEZCUlVZN1FVRkJUVHRGUVVOS0xHRkJRVFpDTERaQ1FVRTNRanM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMFZCUTBVc1lVRkJkMElzVTBGQmVFSTdPMEZCUzBZN1JVRkRSU3hUUVVGM1FpeE5RVUY0UWp0RlFVTkJMR0ZCUVhkQ0xFOUJRWGhDTzBWQlEwRXNZVUZCZDBJc1RVRkJlRUk3TzBGRE0wOUxPMEZCUTB3N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEpRVU5GTEZOQlFYZENMR2RDUVVGNFFqdEpRVU5CTEdkQ1FVRjNRaXhMUVVGNFFpSXNJbVpwYkdVaU9pSnRhM1J6TFcxaGFXNHVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhHNWNibHh1WEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0JDVDFnZ1RVOUVSVXhjYmlBZ2RHaDRJSFJ2SUdoMGRIQTZMeTkzZDNjdWNHRjFiR2x5YVhOb0xtTnZiUzh5TURFeUwySnZlQzF6YVhwcGJtY3RZbTl5WkdWeUxXSnZlQzFtZEhjdklDb3ZYRzVvZEcxc1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNoY2JseHVLaXdnS2pwaVpXWnZjbVVzSUNvNllXWjBaWEpjYmlBZ1ltOTRMWE5wZW1sdVp6b2dhVzVvWlhKcGRGeHVYRzVjYmk4cUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQkdTVmhKVGtjZ1RFbE9SU0JJUlVsSFNGUlRJQzhnUjFKSlJGeHVJQ0IwYUhnZ2RHOGdhSFIwY0RvdkwzZGxZbVJsYzJsbmJtRnVaSE4xWTJndVkyOXRMMmh2ZHkxMGJ5MW1hWGd0YzNWd0xYTjFZaTFzYVc1bExXaGxhV2RvZEMxd2NtOWliR1Z0TFhkcGRHZ3RZM056THlBcUwxeHVLbHh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nSUNBZ0lDQWdJQ0JpYjNSMGIyMGdJV2x0Y0c5eWRHRnVkRnh1WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdUVWxPU1UxQlRDQlRVRUZEU1U1SElFbE9JRlJGV0ZSY2JpQWdjMlYwY3lCM2IzSmtJSE53WVdOcGJtY2dkRzhnWVNCdGFXNXBiWFZ0SUhSb1lYUWdhWE1nWVdOMGRXRnNiSGtnYkdGeVoyVnlJSFJvWVc0Z2VtVnlieUFvUHlrZ0tpOWNibWgwYld4Y2JpQWdiR1YwZEdWeUxYTndZV05wYm1jNklDQWdJQ0FnSUNBZ01HVjRYRzRnSUhkdmNtUXRjM0JoWTJsdVp6b2dJQ0FnSUNBZ0lDQWdJREJsYlZ4dVhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnVEVsSFFWUlZVa1ZUSUVGT1JDQkxSVkpPU1U1SFhHNGdJR05tTGlCb2RIUndjem92TDJSbGRtVnNiM0JsY2k1dGIzcHBiR3hoTG05eVp5OWxiaTFWVXk5a2IyTnpMMWRsWWk5RFUxTXZabTl1ZEMxbVpXRjBkWEpsTFhObGRIUnBibWR6WEc0Z0lHaDBkSEE2THk5a1pXMXZjM1JvWlc1bGN5NXBibVp2TDJKc2IyY3ZOVFEzTDAxaGEyVXRXVzkxY2kxWFpXSXRVR0ZuWlhNdFRXOXlaUzFNWldkcFlteGxMVmRwZEdndFRHbG5ZWFIxY21WekxXRnVaQzFMWlhKdWFXNW5MVkJoYVhKelhHNGdJR2gwZEhBNkx5OWpiR0ZuYm5WMExtTnZiUzl6WVc1a1ltOTRMMjl3Wlc1MGVYQmxMMnhwWjJGMGRYSmxjeUFxTDF4dVhHNHZLaUFqSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNZ0tpOWNiaThxSUZSQlNVNVVJSFJvWlhObElITmxkSFJwYm1keklHbHVkR1Z5WVdOMElIZHBkR2dnWUVCbWIyNTBMV1poWTJWZ0lISjFiR1Z6TENCaGRDQnNaV0Z6ZENCM2FYUm9JSFJvYjNObElHTnZibU5sY201cGJtY2dVM1Z1UlhoMExVRXNJRk4xYmkxRmVIUkNYRzV6ZFdOb0lIUm9ZWFFnWVhRZ2JHVmhjM1FnWTI5a1pYQnZhVzUwY3lCbWNtOXRJSFJvWlNCc1lYUjBaWElnWVhKbElHUnBjM0JzWVhsbFpDQmhjeUIwYUdsdUlIZG9hWFJsSUhOd1lXTmxjeTRnS2k5Y2JpOHFJQ01qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlBcUwxeHVYRzR2THlCb2RHMXNYRzR2THlBZ0lDOHZJSFJsZUhRdGNtVnVaR1Z5YVc1bk9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzQjBhVzFwZW1WTVpXZHBZbWxzYVhSNVhHNHZMeUFnSUhSbGVIUXRjbVZ1WkdWeWFXNW5PaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ2YldWMGNtbGpVSEpsWTJsemFXOXVYRzR2THlBZ0lDOHZJR1p2Ym5RdGRtRnlhV0Z1ZEMxc2FXZGhkSFZ5WlhNNklDQWdJQ0FnSUNBZ1kyOXRiVzl1TFd4cFoyRjBkWEpsYzF4dUx5OGdJQ0F2THlCbWIyNTBMV3RsY201cGJtYzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzV2Y20xaGJGeHVMeThnSUNBdGQyVmlhMmwwTFdadmJuUXRabVZoZEhWeVpTMXpaWFIwYVc1bmN6b2dJRndpYkdsbllWd2lJREVzSUZ3aVpHeHBaMXdpSURGY2JseHVJQ0F2THlBdktpQm9kSFJ3Y3pvdkwyUmxkbVZzYjNCbGNpNXRiM3BwYkd4aExtOXlaeTlsYmkxVlV5OWtiMk56TDFkbFlpOURVMU12Wm05dWRDMTJZWEpwWVc1MExXVmhjM1F0WVhOcFlXNGdLaTljYmlBZ0x5OGdabTl1ZEMxMllYSnBZVzUwTFdWaGMzUXRZWE5wWVc0NklHNXZjbTFoYkZ4dUlDQXZMeUJtYjI1MExYWmhjbWxoYm5RdFpXRnpkQzFoYzJsaGJqb2djblZpZVZ4dUlDQXZMeUJtYjI1MExYWmhjbWxoYm5RdFpXRnpkQzFoYzJsaGJqb2dhbWx6TnpnZ0lDQWdJQ0FnSUNBZ0lDQWdJQzhxSUR4bFlYTjBMV0Z6YVdGdUxYWmhjbWxoYm5RdGRtRnNkV1Z6UGlBcUwxeHVJQ0F2THlCbWIyNTBMWFpoY21saGJuUXRaV0Z6ZEMxaGMybGhiam9nYW1sek9ETWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4cUlEeGxZWE4wTFdGemFXRnVMWFpoY21saGJuUXRkbUZzZFdWelBpQXFMMXh1SUNBdkx5Qm1iMjUwTFhaaGNtbGhiblF0WldGemRDMWhjMmxoYmpvZ2FtbHpPVEFnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHFJRHhsWVhOMExXRnphV0Z1TFhaaGNtbGhiblF0ZG1Gc2RXVnpQaUFxTDF4dUlDQXZMeUJtYjI1MExYWmhjbWxoYm5RdFpXRnpkQzFoYzJsaGJqb2dhbWx6TURRZ0lDQWdJQ0FnSUNBZ0lDQWdJQzhxSUR4bFlYTjBMV0Z6YVdGdUxYWmhjbWxoYm5RdGRtRnNkV1Z6UGlBcUwxeHVJQ0F2THlCbWIyNTBMWFpoY21saGJuUXRaV0Z6ZEMxaGMybGhiam9nYzJsdGNHeHBabWxsWkNBZ0lDQWdJQ0FnSUM4cUlEeGxZWE4wTFdGemFXRnVMWFpoY21saGJuUXRkbUZzZFdWelBpQXFMMXh1SUNBdkx5Qm1iMjUwTFhaaGNtbGhiblF0WldGemRDMWhjMmxoYmpvZ2RISmhaR2wwYVc5dVlXd2dJQ0FnSUNBZ0lDOHFJRHhsWVhOMExXRnphV0Z1TFhaaGNtbGhiblF0ZG1Gc2RXVnpQaUFxTDF4dUlDQXZMeUJtYjI1MExYWmhjbWxoYm5RdFpXRnpkQzFoYzJsaGJqb2dablZzYkMxM2FXUjBhQ0FnSUNBZ0lDQWdJQzhxSUR4bFlYTjBMV0Z6YVdGdUxYZHBaSFJvTFhaaGJIVmxjejRnS2k5Y2JpQWdMeThnWm05dWRDMTJZWEpwWVc1MExXVmhjM1F0WVhOcFlXNDZJSEJ5YjNCdmNuUnBiMjVoYkMxM2FXUjBhQ0F2S2lBOFpXRnpkQzFoYzJsaGJpMTNhV1IwYUMxMllXeDFaWE0rSUNvdlhHNGdJQzh2SUdadmJuUXRkbUZ5YVdGdWRDMWxZWE4wTFdGemFXRnVPaUJ5ZFdKNUlHWjFiR3d0ZDJsa2RHZ2dhbWx6T0ROY2JseHVYRzVjYmx4dVhHNWNibHh1WEc0aUxDSmNibHh1THlvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRJQ292WEc0dktpQkhWVWtnS2k5Y2JuTndiR0Z6YUZ4dWNtbGlZbTl1WEc1MGIyOXNYRzV3WVc1bGJGeHVaM0pwY0Z4dWIzWmxjbXhoZVZ4dVluVjBkRzl1SUM4dklHNXZkQ0J5WldGc2JIa2dZU0JqZFhOMGIyMGdaV3hsYldWdWRGeHVMeW9nVjI5eWEzTndZV05sSUNvdlhHNTBZV0pzWlhSdmNGeHVZWEowWW05aGNtUmNiaTh2SUhOd2NtVmhaRnh1THk4Z2MyaGxaWFJjYmk4cUlFeGhlVzkxZENBcUwxeHVaMkZzYkdWNVhHNXdZWEJsY2x4dWNHRm5aVnh1WTJoaGMyVmNibUp2ZUZ4dVkyOXNkVzF1WEc1bllYQmNibXhwYm1WY2JtTnZjbXRjYm5wdmIyMWxjbHh1WTJoaGMyVmNibXhsWm5SdFlYSm5hVzVjYm5KcFoyaDBiV0Z5WjJsdVhHNTBiM0J0WVhKbmFXNWNibUp2ZEhSdmJXMWhjbWRwYmx4dUlDQmthWE53YkdGNU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWJHOWphMXh1WEc1Y2JseHVJaXdpWEc1Y2JseHVYRzVjYmx4dUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNHZLaUJNUVZSSlRpQW9SVUlnUjJGeVlXMXZibVFwSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNiaThxWEc0dElFVkNSMkZ5WVcxdmJtUXRTVzVwZEdsaGJITTZJRWx1YVhScFlXeHpYRzR0SUVWQ1IyRnlZVzF2Ym1RdFNXNXBkR2xoYkhOR01Ub2dRbUZqYTJkeWIzVnVaQ0FvZEdobElHOXlibUZ0Wlc1MEtTQnZaaUJwYm1sMGFXRnNjMXh1TFNCRlFrZGhjbUZ0YjI1a0xVbHVhWFJwWVd4elJqSTZJRVp2Y21WbmNtOTFibVFnS0hSb1pTQnNaWFIwWlhJcElHOW1JR2x1YVhScFlXeHpYRzR0SUVWQ1IyRnlZVzF2Ym1Rd09DMUpkR0ZzYVdNNklFbDBZV3hwWXlCbWIyNTBJR1p2Y2lCa1pYTnBaMjRnYzJsNlpTQTRjSFFnS0habGNua2djbTkxWjJnZ2MzQmhZMmx1WnlFcFhHNHRJRVZDUjJGeVlXMXZibVF3T0MxU1pXZDFiR0Z5T2lCU1pXZDFiR0Z5SUdadmJuUWdabTl5SUdSbGMybG5iaUJ6YVhwbElEaHdkRnh1TFNCRlFrZGhjbUZ0YjI1a01USXRRV3hzVTBNNklFRnNiQ0J6YldGc2JHTmhjSE1nWm05dWRDQm1iM0lnY0hKdlozSmhiWE1nZEdoaGRDQnBaMjV2Y21VZ2IzQmxiblI1Y0dVZ1ptVmhkSFZ5WlhOY2JpMGdSVUpIWVhKaGJXOXVaREV5TFVKdmJHUTZJRUp2YkdRZ1ptOXVkQ0JtYjNJZ1pHVnphV2R1SUhOcGVtVWdNVEp3ZENBb2RtVnllU0J5YjNWbmFDOTFiblZ6WVdKc1pUc2dibTkwSUdsdVkyeDFaR1ZrSUdsdUlISmxiR1ZoYzJWektWeHVMU0JGUWtkaGNtRnRiMjVrTVRJdFNYUmhiR2xqT2lCSmRHRnNhV01nWm05dWRDQm1iM0lnWkdWemFXZHVJSE5wZW1VZ01USndkRnh1TFNCRlFrZGhjbUZ0YjI1a01USXRVbVZuZFd4aGNqb2dVbVZuZFd4aGNpQm1iMjUwSUdadmNpQmtaWE5wWjI0Z2MybDZaU0F4TW5CMFhHNHRJRVZDUjJGeVlXMXZibVF4TWkxVFF6b2dVMjFoYkd4allYQnpJR1p2Ym5RZ1ptOXlJSEJ5YjJkeVlXMXpJSFJvWVhRZ2FXZHViM0psSUc5d1pXNTBlWEJsSUdabFlYUjFjbVZ6SUNneE1uQjBLVnh1S2k5Y2JpOHFJR2gwZEhBNkx5OTNkM2N1WjJWdmNtZGtkV1ptYm1WeUxtRjBMMlZpWjJGeVlXMXZibVFnS2k5Y2JseHVRR1p2Ym5RdFptRmpaVnh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFnSUNBZ0lDQWdJQ0FuYkdGMGFXNG5YRzRnSUNBZ2MzSmpPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ5YkNnZ0p5NHZabTl1ZEhNdlJVSkhZWEpoYlc5dVpDMHdMakF4TmkxM1pXSXZSVUpIWVhKaGJXOXVaREV5TFZKbFozVnNZWEl1ZEhSbUp5QXBYRzVjYmtCbWIyNTBMV1poWTJWY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0lDQWdJQ0FnSUNBZ0oyeGhkR2x1SjF4dUlDQWdJSE55WXpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWNtd29JQ2N1TDJadmJuUnpMMFZDUjJGeVlXMXZibVF0TUM0d01UWXRkMlZpTDBWQ1IyRnlZVzF2Ym1ReE1pMUpkR0ZzYVdNdWRIUm1KeUFwWEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nSUNBZ0lDQWdJQ0FnSUdsMFlXeHBZMXh1WEc0dktpQndaVzVrYVc1bk9seHVJQ0FnSUhOeVl6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFjbXdvSUNjdUwyWnZiblJ6TDBWQ1IyRnlZVzF2Ym1RdE1DNHdNVFl0ZDJWaUwwVkNSMkZ5WVcxdmJtUXdPQzFKZEdGc2FXTXVkMjltWmljZ0tWeHVJQ0FnSUhOeVl6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFjbXdvSUNjdUwyWnZiblJ6TDBWQ1IyRnlZVzF2Ym1RdE1DNHdNVFl0ZDJWaUwwVkNSMkZ5WVcxdmJtUXdPQzFTWldkMWJHRnlMbmR2Wm1ZbklDbGNiaUFnSUNCemNtTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEpzS0NBbkxpOW1iMjUwY3k5RlFrZGhjbUZ0YjI1a0xUQXVNREUyTFhkbFlpOUZRa2RoY21GdGIyNWtMVWx1YVhScFlXeHpMbmR2Wm1ZbklDbGNiaUFnSUNCemNtTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEpzS0NBbkxpOW1iMjUwY3k5RlFrZGhjbUZ0YjI1a0xUQXVNREUyTFhkbFlpOUZRa2RoY21GdGIyNWtMVWx1YVhScFlXeHpSakV1ZDI5bVppY2dLVnh1SUNBZ0lITnlZem9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxY213b0lDY3VMMlp2Ym5SekwwVkNSMkZ5WVcxdmJtUXRNQzR3TVRZdGQyVmlMMFZDUjJGeVlXMXZibVF0U1c1cGRHbGhiSE5HTWk1M2IyWm1KeUFwWEc0Z0lDQWdjM0pqT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWeWJDZ2dKeTR2Wm05dWRITXZSVUpIWVhKaGJXOXVaQzB3TGpBeE5pMTNaV0l2UlVKSFlYSmhiVzl1WkRFeUxVRnNiRk5ETG5kdlptWW5JQ2xjYmlBZ0lDQnpjbU02SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc0tDQW5MaTltYjI1MGN5OUZRa2RoY21GdGIyNWtMVEF1TURFMkxYZGxZaTlGUWtkaGNtRnRiMjVrVTBNd09DMVNaV2QxYkdGeUxuZHZabVluSUNsY2JpQWdJQ0J6Y21NNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYSnNLQ0FuTGk5bWIyNTBjeTlGUWtkaGNtRnRiMjVrTFRBdU1ERTJMWGRsWWk5RlFrZGhjbUZ0YjI1a1UwTXhNaTFTWldkMWJHRnlMbmR2Wm1ZbklDbGNiaW92WEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCTVFWTlVJRkpGVTA5U1ZDQXFMMXh1THlvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRJQ292WEc1QVptOXVkQzFtWVdObFhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBZ0lDQWdJQ0FnSUNBZ0lDZHNZWE4wY21WemIzSjBKMXh1SUNCemNtTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxY213b0lDY3VMMlp2Ym5SekwweGhjM1JTWlhOdmNuUXVkSFJtSnlBcFhHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkZ4dUlDQm1iMjUwTFhOMGVXeGxPaUFnSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hjYmx4dVhHNHZLaUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNiaThxSUVaUFRsUWdWRVZUVkNBcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVBWm05dWRDMW1ZV05sWEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5jM0JwYm1ONVkyeGxMV1Z2ZENkY2JpQWdjM0pqT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ5YkNnbkxpOW1iMjUwY3k5emNHbHVZM2xqYkdVdmMzQnBibU41WTJ4bFgyOTBMbVZ2ZENjcFhHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeGNiaUFnWm05dWRDMXpkSGxzWlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiRnh1WEc1QVptOXVkQzFtWVdObFhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuYzNCcGJtTjVZMnhsTFhkdlptWXlKMXh1SUNCemNtTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYSnNLQ2N1TDJadmJuUnpMM053YVc1amVXTnNaUzl6Y0dsdVkzbGpiR1ZmYjNRdWQyOW1aakluS1Z4dUlDQm1iMjUwTFhkbGFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc1hHNGdJR1p2Ym5RdGMzUjViR1U2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeGNibHh1UUdadmJuUXRabUZqWlZ4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKM053YVc1amVXTnNaUzEzYjJabUoxeHVJQ0J6Y21NNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc0tDY3VMMlp2Ym5SekwzTndhVzVqZVdOc1pTOXpjR2x1WTNsamJHVmZiM1F1ZDI5bVppY3BYRzRnSUdadmJuUXRkMlZwWjJoME9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkZ4dVhHNUFabTl1ZEMxbVlXTmxYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmMzQnBibU41WTJ4bExYUnlkV1YwZVhCbEoxeHVJQ0J6Y21NNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc0tDY3VMMlp2Ym5SekwzTndhVzVqZVdOc1pTOXpjR2x1WTNsamJHVmZiM1F1ZEhSbUp5bGNiaUFnWm05dWRDMTNaV2xuYUhRNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiRnh1SUNCbWIyNTBMWE4wZVd4bE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzWEc1Y2JseHVYRzVjYmx4dVhHNWNibHh1WEc1Y2JseHVYRzVjYmx4dVhHNWNibHh1WEc1Y2JseHVYRzVjYmx4dVhHNWNibHh1WEc1Y2JseHVYRzVjYmx4dVhHNWNibHh1SWl3aVhHNWNiaThxSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1THlvZ1RFRlRWQ0JTUlZOUFVsUWdLaTljYmk4cUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMU0FxTDF4dVFHWnZiblF0Wm1GalpWeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0lDQWdJQ0FnSUNBZ0lDQW5ZMnBySjF4dUlDQnpjbU02SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWNtd29JQ2N1TDJadmJuUnpMMHhoYzNSU1pYTnZjblF1ZEhSbUp5QXBYRzRnSUhWdWFXTnZaR1V0Y21GdVoyVTZJRnhjWEc0Z0lDQWdWU3N3TW1VNE1DMHdNbVZtWml3Z0lDQWdJQ0FnSUM4dklFTktTeUJTWVdScFkyRnNjeUJUZFhCd2JHVnRaVzUwSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXlZV1F5WEc0Z0lDQWdWU3N3TW1Zd01DMHdNbVprWml3Z0lDQWdJQ0FnSUM4dklFdGhibWQ0YVNCU1lXUnBZMkZzY3lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXlZV1F4WEc0Z0lDQWdWU3N3TXpBd01DMHdNekF6Wml3Z0lDQWdJQ0FnSUM4dklFTktTeUJUZVcxaWIyeHpJR0Z1WkNCUWRXNWpkSFZoZEdsdmJpQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXplVzFjYmlBZ0lDQlZLekF6TVdNd0xUQXpNV1ZtTENBZ0lDQWdJQ0FnTHk4Z1EwcExJRk4wY205clpYTWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV0WTJwckxYTjBjbXRjYmlBZ0lDQlZLekF6TWpBd0xUQXpNbVptTENBZ0lDQWdJQ0FnTHk4Z1JXNWpiRzl6WldRZ1EwcExJRXhsZEhSbGNuTWdZVzVrSUUxdmJuUm9jeUFnSUNBZ0lDQWdJSFV0WTJwckxXVnVZMnhsZEhSY2JpQWdJQ0JWS3pBek16QXdMVEF6TTJabUxDQWdJQ0FnSUNBZ0x5OGdRMHBMSUVOdmJYQmhkR2xpYVd4cGRIa2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdFkycHJMV050Y0Z4dUlDQWdJRlVyTURNME1EQXRNRFJrWW1Zc0lDQWdJQ0FnSUNBdkx5QkRTa3NnVlc1cFptbGxaQ0JKWkdWdlozSmhjR2h6SUVWNGRHVnVjMmx2YmlCQklDQWdJQ0FnZFMxamFtc3RlR0ZjYmlBZ0lDQlZLekEwWlRBd0xUQTVabVptTENBZ0lDQWdJQ0FnTHk4Z1EwcExJRlZ1YVdacFpXUWdTV1JsYjJkeVlYQm9jeUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV0WTJwclhHNGdJQ0FnVlNzd1pqa3dNQzB3Wm1GbVppd2dJQ0FnSUNBZ0lDOHZJRU5LU3lCRGIyMXdZWFJwWW1sc2FYUjVJRWxrWlc5bmNtRndhSE1nSUNBZ0lDQWdJQ0FnSUNCMUxXTnFheTFqYlhCcE1WeHVJQ0FnSUZVck1HWmxNekF0TUdabE5HWXNJQ0FnSUNBZ0lDQXZMeUJEU2tzZ1EyOXRjR0YwYVdKcGJHbDBlU0JHYjNKdGN5QWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RTMWphbXN0WTIxd1pseHVJQ0FnSUZVck1qQXdNREF0TW1FMlpHWXNJQ0FnSUNBZ0lDQXZMeUJEU2tzZ1ZXNXBabWxsWkNCSlpHVnZaM0poY0doeklFVjRkR1Z1YzJsdmJpQkNJQ0FnSUNBZ2RTMWphbXN0ZUdKY2JpQWdJQ0JWS3pKaE56QXdMVEppTnpObUxDQWdJQ0FnSUNBZ0x5OGdRMHBMSUZWdWFXWnBaV1FnU1dSbGIyZHlZWEJvY3lCRmVIUmxibk5wYjI0Z1F5QWdJQ0FnSUhVdFkycHJMWGhqWEc0Z0lDQWdWU3N5WWpjME1DMHlZamd4Wml3Z0lDQWdJQ0FnSUM4dklFTktTeUJWYm1sbWFXVmtJRWxrWlc5bmNtRndhSE1nUlhoMFpXNXphVzl1SUVRZ0lDQWdJQ0IxTFdOcWF5MTRaRnh1SUNBZ0lGVXJNbVk0TURBdE1tWmhNV1lnSUNBZ0lDQWdJQ0F2THlCRFNrc2dRMjl0Y0dGMGFXSnBiR2wwZVNCSlpHVnZaM0poY0doeklGTjFjSEJzWlcxbGJuUWdkUzFqYW1zdFkyMXdhVEpjYmx4dVhHNUFabTl1ZEMxbVlXTmxYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWdJQ0FnSUNBZ0lDQWdJQ2RqYW1zblhHNGdJSE55WXpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHZZMkZzS0NBblUzVnVMVVY0ZEVFbklDbGNiaUFnTHk4Z2MzSmpPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc0tDQW5MaTltYjI1MGN5OWphbXN2VTNWdUxVVjRkRUV1ZEhSbUp5QXBYRzRnSUhWdWFXTnZaR1V0Y21GdVoyVTZJRnhjWEc0Z0lDQWdWU3N3TW1VNE1DMHdNbVZtWml3Z0lDQWdJQ0FnSUM4dklFTktTeUJTWVdScFkyRnNjeUJUZFhCd2JHVnRaVzUwSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXlZV1F5WEc0Z0lDQWdWU3N3TW1Zd01DMHdNbVprWml3Z0lDQWdJQ0FnSUM4dklFdGhibWQ0YVNCU1lXUnBZMkZzY3lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXlZV1F4WEc0Z0lDQWdWU3N3TXpBd01DMHdNekF6Wml3Z0lDQWdJQ0FnSUM4dklFTktTeUJUZVcxaWIyeHpJR0Z1WkNCUWRXNWpkSFZoZEdsdmJpQWdJQ0FnSUNBZ0lDQWdJQ0IxTFdOcWF5MXplVzFjYmlBZ0lDQlZLekF6TVdNd0xUQXpNV1ZtTENBZ0lDQWdJQ0FnTHk4Z1EwcExJRk4wY205clpYTWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV0WTJwckxYTjBjbXRjYmlBZ0lDQlZLekF6TWpBd0xUQXpNbVptTENBZ0lDQWdJQ0FnTHk4Z1JXNWpiRzl6WldRZ1EwcExJRXhsZEhSbGNuTWdZVzVrSUUxdmJuUm9jeUFnSUNBZ0lDQWdJSFV0WTJwckxXVnVZMnhsZEhSY2JpQWdJQ0JWS3pBek16QXdMVEF6TTJabUxDQWdJQ0FnSUNBZ0x5OGdRMHBMSUVOdmJYQmhkR2xpYVd4cGRIa2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdFkycHJMV050Y0Z4dUlDQWdJRlVyTURNME1EQXRNRFJrWW1Zc0lDQWdJQ0FnSUNBdkx5QkRTa3NnVlc1cFptbGxaQ0JKWkdWdlozSmhjR2h6SUVWNGRHVnVjMmx2YmlCQklDQWdJQ0FnZFMxamFtc3RlR0ZjYmlBZ0lDQlZLekEwWlRBd0xUQTVabVptTENBZ0lDQWdJQ0FnTHk4Z1EwcExJRlZ1YVdacFpXUWdTV1JsYjJkeVlYQm9jeUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV0WTJwclhHNGdJQ0FnVlNzd1pqa3dNQzB3Wm1GbVppd2dJQ0FnSUNBZ0lDOHZJRU5LU3lCRGIyMXdZWFJwWW1sc2FYUjVJRWxrWlc5bmNtRndhSE1nSUNBZ0lDQWdJQ0FnSUNCMUxXTnFheTFqYlhCcE1WeHVJQ0FnSUZVck1HWmxNekF0TUdabE5HWXNJQ0FnSUNBZ0lDQXZMeUJEU2tzZ1EyOXRjR0YwYVdKcGJHbDBlU0JHYjNKdGN5QWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RTMWphbXN0WTIxd1pseHVJQ0FnSUZVck1tWTRNREF0TW1aaE1XWWdJQ0FnSUNBZ0lDQXZMeUJEU2tzZ1EyOXRjR0YwYVdKcGJHbDBlU0JKWkdWdlozSmhjR2h6SUZOMWNIQnNaVzFsYm5RZ2RTMWphbXN0WTIxd2FUSmNibHh1UUdadmJuUXRabUZqWlZ4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSUNBZ0lDQWdJQ0FnSUNBblkycHJKMXh1SUNCemNtTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGJDZ2dKM04xYm1ac2IzZGxjaTExTFdOcWF5MTRZaWNnS1Z4dUlDQjFibWxqYjJSbExYSmhibWRsT2lCY1hGeHVJQ0FnSUZVck1qQXdNREF0TW1JNE1XWWdJQ0FnSUNBZ0lDQXZMeUJEU2tzZ1ZXNXBabWxsWkNCSlpHVnZaM0poY0doeklFVjRkR1Z1YzJsdmJpQkNJQ0FnSUNBZ2RTMWphbXN0ZUdKY2JseHVRR1p2Ym5RdFptRmpaVnh1SUNCbWIyNTBMV1poYldsc2VUb2dJQ0FnSUNBZ0lDQWdJQ0FuWTJwckoxeHVJQ0J6Y21NNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMk5oYkNnZ0oycHBlblZ5WVROaUp5QXBYRzRnSUhWdWFXTnZaR1V0Y21GdVoyVTZJQ0FnSUNBZ0lDQWdJRlVyWlRBd01DMW1PR1ptWEc1Y2JrQm1iMjUwTFdaaFkyVmNiaUFnWm05dWRDMW1ZVzFwYkhrNklDQWdJQ0FnSUNBZ0lDQWdKMnA2Y2kxaVlXSmxiQ2RjYmlBZ2MzSmpPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkc5allXd29JQ2RDWVdKbGJGTjBiMjVsSUVoaGJpY2dLVnh1SWl3aVhHNWNibHh1WEc1Y2JpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVMeW9nUVZKVVFrOUJVa1JUSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNia0J0WldScFlTQnpZM0psWlc1Y2JpQWdZWEowWW05aGNtUmNiaUFnSUNCd2IzTnBkR2x2YmpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWW5OdmJIVjBaVnh1SUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklDQWdJQ0FnSUhWeWJDZ2dYQ0l1TDJKaFkydG5jbTkxYm1SZmJHbHVaVzVmYkdsdFpTNXdibWRjSWlBcFhHNGdJQ0FnYldsdUxYZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdNVEF3TUcxdFhHNGdJQ0FnY0dGa1pHbHVaem9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdOVEJ0YlZ4dVhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNia0J0WldScFlTQndjbWx1ZEZ4dUlDQmhjblJpYjJGeVpDNW5ZV3hzWlhsY2JpQWdJQ0JrYVhOd2JHRjVPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnViMjVsWEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCYVQwOU5SVkpUSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNia0J0WldScFlTQnpZM0psWlc1Y2JpQWdlbTl2YldWeVhHNGdJQ0FnYjNabGNtWnNiM2M2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWFYwYjF4dUlDQWdJQzh2SUhSeVlXNXpabTl5YlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qWVd4bEtDQXhJQ2xjYmlBZ0lDQXZMeUIwY21GdWMyWnZjbTB0YjNKcFoybHVPaUFnSUNBZ0lDQjBiM0FnYkdWbWRGeHVJQ0FnSUM4dklIQnZjMmwwYVc5dU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGaWMyOXNkWFJsWEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCUFZrVlNURUZaVXlBcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVBYldWa2FXRWdjMk55WldWdVhHNGdJRzkyWlhKc1lYbGNiaUFnSUNCa2FYTndiR0Y1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkc5amExeHVJQ0FnSUhCdmMybDBhVzl1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZpYzI5c2RYUmxYRzRnSUNBZ2RHOXdPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRCdGJWeHVJQ0FnSUd4bFpuUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREV3YlcxY2JpQWdJQ0JqYjJ4dmNqb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtaM0poZVZ4dUlDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQWdJQ0FnSUNBZ0lHNXZibVZjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSUNBZ0lDQWdJQ0FnSUNCY0lrTmxiblIxY25rZ1UyTm9iMjlzWW05dmExd2lYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dJQ0FnSUNBZ0lDQWdJQ0FnYVhSaGJHbGpYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ0FnSUNBZ0lDQWdJQ0FnWW05c1pGeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJRE13YlcxY2JseHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVBYldWa2FXRWdjSEpwYm5SY2JpQWdiM1psY214aGVWeHVJQ0FnSUdScGMzQnNZWGs2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzV2Ym1WY2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCQ1QwUlpJQ292WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBnS2k5Y2JrQnRaV1JwWVNCelkzSmxaVzVjYmlBZ1ltOWtlVnh1SUNBZ0lHUnBjM0JzWVhrNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdac1pYaGNiaUFnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nSUNBZ0lDQWdJQ0JqYjJ4MWJXNWNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBZ0lDQWdJQ0FrWkdGeWF5MXNhVzFsWEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCU1NVSkNUMDVUSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNia0J0WldScFlTQnpZM0psWlc1Y2JpQWdjbWxpWW05dVhHNGdJSFp5YVdKaWIyNWNiaUFnSUNCa2FYTndiR0Y1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNFhHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJQ0FnSUNBZ0lDQWdZMjlzZFcxdVhHNWNiaUFnYUhKcFltSnZibHh1SUNBZ0lIQnZjMmwwYVc5dU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGVHVmtYRzRnSUNBZ2RHOXdPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTlcxdFhHNGdJQ0FnYkdWbWREb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdOVzF0WEc0Z0lDQWdaR2x6Y0d4aGVUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRnh1SUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lBZ0lDQWdJQ0FnSUhKdmQxeHVJQ0FnSUMxdGEzUnpMV1J5WVdkbllXSnNaVG9nSUNBZ0lDQWdJSGg1WEc0Z0lDQWdjbVZ6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOTBhRnh1WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBnS2k5Y2JrQnRaV1JwWVNCd2NtbHVkRnh1SUNCeWFXSmliMjVjYmlBZ2FISnBZbUp2Ymx4dUlDQjJjbWxpWW05dVhHNGdJQ0FnWkdsemNHeGhlVG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibTl1WlZ4dVhHNWNiaThxSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1THlvZ1EwOU9VMDlNUlNBcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVBYldWa2FXRWdjMk55WldWdVhHNGdJQzVuZFdrdFkyOXVjMjlzWlZ4dUlDQWdJQzhxSUNNakl5QlVRVWxPVkNCdFlXdGxJSEpsYzJsNllXSnNaU3dnYUdsa1pXRmliR1VnSXlNaklDb3ZYRzRnSUNBZ2QybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRBd0pWeHVJQ0FnSUdobGFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRFV3YlcxY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFnSUNBZ0lDQWtjMnhoZEdWY2JseHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVBYldWa2FXRWdjSEpwYm5SY2JpQWdMbWQxYVMxamIyNXpiMnhsWEc0Z0lDQWdaR2x6Y0d4aGVUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOXVaVnh1WEc1Y2JpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVMeW9nVFU5VlUwVWdRMVZTVTA5U0lDb3ZYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYmtCdFpXUnBZU0J6WTNKbFpXNWNiaUFnYVM1dGEzUnpMWFJ2YjJ3dGFHRnVaRnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01uSmxiU0F2THlCdWIzUWdkWE5sWkZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJQ0FnSUNBZ0lDQWdkWEpzS0M0dmFXTnZibk12Yld0MGN5MTBiMjlzTFdoaGJtUXVjRzVuS1Z4dUlDQWdJSGRwWkhSb09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNbkpsYlZ4dUlDQWdJR2hsYVdkb2REb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNbkpsYlZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUFnSUNBZ0lDQWdibTh0Y21Wd1pXRjBYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBZ0lDQWdJQ0FnSUNBeE1EQWxYRzRnSUNBZ1pHbHpjR3hoZVRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWJHOWphMXh1WEc0Z0lHSnZaSGt1WTNWeWMyOXlMV1JsWm1GMWJIUmNiaUFnSUNCamRYSnpiM0k2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFJjYmx4dUlDQmliMlI1TG1OMWNuTnZjaTFvWVc1a1hHNGdJQ0FnWTNWeWMyOXlPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxY213b0xpOXBZMjl1Y3k5dGEzUnpMWFJ2YjJ3dGFHRnVaQzFqZFhKemIzSXVjRzVuS1N3Z1lYVjBiMXh1WEc0Z0lHSnZaSGt1WjNKaFltSnBibWRjYmlBZ0lDQmpkWEp6YjNJNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnliQ2d1TDJsamIyNXpMMjFyZEhNdGRHOXZiQzFvWVc1a0xXZHlZV0ppYVc1bkxXTjFjbk52Y2k1d2JtY3BMQ0JoZFhSdlhHNWNibHh1THlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc0dktpQk5RVlJGVWtsQlRFUkZVMGxIVGkxRFUxTWdRbFZVVkU5T1V5QXFMMXh1THlvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRJQ292WEc1QWJXVmthV0VnYzJOeVpXVnVYRzRnSUM1aWRHNWNiaUFnSUNCa2FYTndiR0Y1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkc5amExeHVJQ0FnSUhkcFpIUm9PaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREV3TUNWY2JpQWdJQ0F2THlCb1pXbG5hSFE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TURBbFhHNWNiaThxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTQXFMMXh1UUcxbFpHbGhJSEJ5YVc1MFhHNGdJQzVpZEc1Y2JpQWdJQ0JrYVhOd2JHRjVPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnViMjVsWEc1Y2JseHVYRzRpTENKY2JseHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYmk4cUlFVjRjR1Z5YVcxbGJuUmhiR3g1SUdSbGRHVmpkR1ZrSUhSb1lYUWdZQ1J3WVhCbGNpMW9aV2xuYUhRZ1BTQXlPVGR0YlNBdElEQXVNVE50YldBZ2FYTWdibTkwSUdWdWIzVm5hQ0JpZFhSY2JpQWdZREk1TjIxdElDMGdNQzR4TlcxdFlDQnBjeUJsYm05MVoyZ2dkRzhnWVhadmFXUWdhVzUwWlhKMlpXNXBibWNnWW14aGJtc2djR0ZuWlhNZ2FXNGdkR2hsSUZCRVJpNGdLaTljYmlSd1lYQmxjaTEzYVdSMGFDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlESXhNRzF0WEc0a2NHRndaWEl0YUdWcFoyaDBJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BTQXlPVGR0YlNBdElEQXVNVFZ0YlZ4dUx5OGdKSEJoY0dWeUxYZHBaSFJvSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnTWpFd2JXMWNiaTh2SUNSd1lYQmxjaTFvWldsbmFIUWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlESTVOMjF0WEc0dktpQXVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTRnS2k5Y2JpOHZJQ2RuZFhSMFpYSnpKeUJwYmlCMGVYQnZaM0poY0docFl5QjBaWEp0Y3lBb2JtOXVMWEJ5YVc1MFlXSnNaU0JoY21WaGN5a2dZbVZqYjIxbElDZHdZV1JrYVc1bmN5Y2dhVzRnUTFOVE9seHVKR2QxZEhSbGNpMXNaV1owSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnTkM0MWJXMWNiaVJuZFhSMFpYSXRjbWxuYUhRZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUNSbmRYUjBaWEl0YkdWbWRGeHVKR2QxZEhSbGNpMTBiM0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnT0cxdFhHNGtaM1YwZEdWeUxXSnZkSFJ2YlNBZ0lDQWdJQ0FnSUNBZ0lDQWdQU0F4TUcxdFhHNHZLaUF1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0Z0tpOWNiaTh2SUNkdFlYSm5hVzV6SnlCcGJpQjBlWEJ2WjNKaGNHaHBZeUIwWlhKdGN5QW9ZWEpsWVhNZ2IzVjBjMmxrWlNCMGFHVWdiV0ZwYmlCamIyNTBaVzUwS1NCaVpXTnZiV1VnSjNCaFpHUnBibWR6SnlCcGJpQkRVMU02WEc0a2JXRnlaMmx1TFd4bFpuUWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BTQXhOVzF0WEc0a2JXRnlaMmx1TFhKcFoyaDBJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BTQWtiV0Z5WjJsdUxXeGxablJjYmlSdFlYSm5hVzR0ZEc5d0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlERXhiVzFjYmlSdFlYSm5hVzR0WW05MGRHOXRJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlEVnRiVnh1THlvZ0xpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVJQ292WEc0dkx5QjBhR1VnWTJoaGMyVWdjbVZ3Y21WelpXNTBjeUIwYUdVZ2NISnBiblJoWW14bElHRnlaV0U3SUdsdWMybGtaU3dnWm14aGJtdGxaQ0JpZVNCMGFHVWdiV0Z5WjJsdWN5d2dhWE1nZEdobElHMWhhVzRnWTI5dWRHVnVkQ0JoY21WaE9seHVKR05vWVhObExYZHBaSFJvSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnSkhCaGNHVnlMWGRwWkhSb0lDQXRJQ1JuZFhSMFpYSXRiR1ZtZENBZ0xTQWtaM1YwZEdWeUxYSnBaMmgwWEc0a1kyaGhjMlV0YUdWcFoyaDBJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BTQWtjR0Z3WlhJdGFHVnBaMmgwSUMwZ0pHZDFkSFJsY2kxMGIzQWdJQ0F0SUNSbmRYUjBaWEl0WW05MGRHOXRYRzR2S2lBdUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNGdLaTljYmlSbllXeHNaWGt0ZDJsa2RHZ2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlDUndZWEJsY2kxM2FXUjBhRnh1WEc0dkx5QXZLaUF1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0dUxpNHVMaTR1TGk0Z0tpOWNiaTh2SUM4dklENCtQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQbHh1THk4Z0pHTnZiblJsYm5RdGQybGtkR2dnSUNBZ0lDQWdJQ0FnSUNBZ0lEMGdKSEJoWjJVdGQybGtkR2dnSUNBdElDUnRZWEpuYVc0dGJHVm1kQ0FnTFNBa2JXRnlaMmx1TFhKcFoyaDBYRzR2THlBa1kyOXVkR1Z1ZEMxb1pXbG5hSFFnSUNBZ0lDQWdJQ0FnSUNBZ1BTQWtjR0ZuWlMxb1pXbG5hSFFnSUMwZ0pHMWhjbWRwYmkxMGIzQWdJQ0F0SUNSdFlYSm5hVzR0WW05MGRHOXRYRzR2THlBdkx5QStQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQajQrUGo0K1BqNCtQajVjYmx4dUx5OGdKR2RoYkd4bGVTMTNhV1IwYUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnSkhCaFoyVXRkMmxrZEdnZ0lDQXRJQ1J0WVhKbmFXNHRiR1ZtZENBZ0xTQWtiV0Z5WjJsdUxYSnBaMmgwWEc0dkx5QWtaMkZzYkdWNUxXaGxhV2RvZENBZ0lDQWdJQ0FnSUNBZ0lDQWdQU0FrY0dGblpTMW9aV2xuYUhRZ0lDMGdKRzFoY21kcGJpMTBiM0FnSUNBdElDUnRZWEpuYVc0dFltOTBkRzl0WEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFNBcUwxeHVjR0Z3WlhKY2JuQmhaMlZjYmlBZ2QybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkhCaGNHVnlMWGRwWkhSb1hHNGdJR2hsYVdkb2REb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUndZWEJsY2kxb1pXbG5hSFJjYmlBZ1pHbHpjR3hoZVRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVGeHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYm1kaGJHeGxlVnh1SUNCa2FYTndiR0Y1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjI1bFhHNGdJRzFwYmkxb1pXbG5hSFE2SUNBZ0lDQWdJQ0FnSUNBZ0lERXdiVzFjYmlBZ2QybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkhCaGNHVnlMWGRwWkhSb1hHNGdJR1pzYjJGME9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablJjYmlBZ2FHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhWMGIxeHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYm1Ob1lYTmxYRzRnSUhCdmMybDBhVzl1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYkdGMGFYWmxYRzRnSUd4bFpuUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JuZFhSMFpYSXRiR1ZtZEZ4dUlDQjBiM0E2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1ozVjBkR1Z5TFhSdmNGeHVJQ0IzYVdSMGFEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtZMmhoYzJVdGQybGtkR2hjYmlBZ2FHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdOb1lYTmxMV2hsYVdkb2RGeHVJQ0JrYVhOd2JHRjVPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lBZ0lDQWdJQ0FnSUdOdmJIVnRibHh1SUNCbWJHOWhkRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWldaMFhHNGdJQzh2SUc5MlpYSm1iRzkzT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YxZEc5Y2JseHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzVuWVd4c1pYa2dZMmhoYzJWY2JpQWdhR1ZwWjJoME9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYVjBiMXh1SUNCMGIzQTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3WEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFNBcUwxeHVRRzFsWkdsaElITmpjbVZsYmx4dUlDQndZWEJsY2x4dUlDQndZV2RsWEc0Z0lHZGhiR3hsZVZ4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ0FnSUNBZ0lDUndZWEJsY2kxM2FHbDBaVnh1SUNBZ0lHSnZlQzF6YUdGa2IzY2dJQ0FnSUNBZ0lDQWdJQ0FnSURFd2NIZ2dNVEJ3ZUNBek5YQjRJREJ3ZUNCeVoySmhLREFzTUN3d0xEQXVOU2xjYmlBZ0lDQm1iRzloZERvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pXWjBYRzRnSUNBZ2JXRnlaMmx1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRCdGJWeHVJQ0FnSUhCdmMybDBhVzl1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYkdGMGFYWmxYRzVjYmlBZ1oyRnNiR1Y1WEc0Z0lDQWdaR2x6Y0d4aGVUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRnh1WEc0dktpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBnS2k5Y2JrQnRaV1JwWVNCd2NtbHVkRnh1SUNCd1lYQmxjbHh1SUNCd1lXZGxYRzRnSUNBZ2IzWmxjbVpzYjNjNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdsa1pHVnVYRzRnSUNBZ2NHRm5aUzFpY21WaGF5MWhablJsY2pvZ0lDQWdJQ0FnWVd4M1lYbHpYRzVjYmk4cUlEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dUx5b2dRazlZUlZNc0lFTlBURlZOVGxNZ0ppQkhRVkJUSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibUp2ZUZ4dWFHSnZlRnh1SUNCbWJHVjRMWE5vY21sdWF6b2dJQ0FnSUNBZ0lDQWdJQ0F4WEc0Z0lHWnNaWGd0WjNKdmR6b2dJQ0FnSUNBZ0lDQWdJQ0FnSURGY2JpQWdaR2x6Y0d4aGVUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGxlRnh1SUNCbWJHVjRMV1JwY21WamRHbHZiam9nSUNBZ0lDQWdJQ0J5YjNkY2JseHVMeW9nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdElDb3ZYRzUyWW05NFhHNGdJR1pzWlhndGMyaHlhVzVyT2lBZ0lDQWdJQ0FnSUNBZ0lERmNiaUFnWm14bGVDMW5jbTkzT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdNVnh1SUNCa2FYTndiR0Y1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNFhHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQWdJQ0FnSUNBZ0lHTnZiSFZ0Ymx4dVhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibU52YkhWdGJseHVJQ0F2THlCb1pXbG5hSFE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TURBbFhHNGdJQzhxSUU1dmJXbHVZV3dnZDJsa2RHZ2djMjhnWVd4c0lHTnZiSFZ0Ym5NZ2FXNGdZU0JtYkdWNElHSnZlQ0JvWVhabElIUm9aU0J6WVcxbElIZHBaSFJvSUhKbFoyRnlaR3hsYzNNZ2IyWWdZMjl1ZEdWdWREb2dLaTljYmlBZ2QybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVcxdFhHNGdJR1pzWlhndGMyaHlhVzVyT2lBZ0lDQWdJQ0FnSUNBZ0lERmNiaUFnWm14bGVDMW5jbTkzT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdNVnh1SUNBdktpQmdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxZQ0J1WldWa1pXUWdabTl5SUdOdmNtdHpJQ292WEc0Z0lIQnZjMmwwYVc5dU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGJHRjBhWFpsWEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFNBcUwxeHVhR2RoY0Z4dUlDQjNhV1IwYURvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeE1EQWxYRzRnSUdac1pYZ3RjMmh5YVc1ck9pQWdJQ0FnSUNBZ0lDQWdJREZjYmlBZ1pteGxlQzFuY205M09pQWdJQ0FnSUNBZ0lDQWdJQ0FnTVZ4dVhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibmhvWjJGd1hHNGdJSGRwWkhSb09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXdNQ1ZjYmlBZ1pteGxlQzF6YUhKcGJtczZJQ0FnSUNBZ0lDQWdJQ0FnTVRBd01EQXdNRnh1SUNCbWJHVjRMV2R5YjNjNklDQWdJQ0FnSUNBZ0lDQWdJQ0F4TURBd01EQXdYRzVjYmk4cUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMU0FxTDF4dWRtZGhjRnh1SUNCM2FXUjBhRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0ExYlcxY2JpQWdMeThnYUdWcFoyaDBPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNVEF3SlZ4dUlDQnRhVzR0ZDJsa2RHZzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBMWJXMWNiaUFnYldGNExYZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdOVzF0WEc0Z0lHWnNaWGd0YzJoeWFXNXJPaUFnSUNBZ0lDQWdJQ0FnSURCY2JpQWdabXhsZUMxbmNtOTNPaUFnSUNBZ0lDQWdJQ0FnSUNBZ01GeHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYmtCdFpXUnBZU0J6WTNKbFpXNWNiaUFnWjJGd1hHNGdJSFpuWVhCY2JpQWdhR2RoY0Z4dUlDQjRhR2RoY0Z4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ0FnSUNBZ0lDUm5jbUY1WEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lCTlFWSkhTVTVUSUNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibXhsWm5SdFlYSm5hVzVjYm5KcFoyaDBiV0Z5WjJsdVhHNGdJR1pzWlhndGMyaHlhVzVyT2lBZ0lDQWdJQ0FnSUNBZ0lEQmNiaUFnWm14bGVDMW5jbTkzT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdNRnh1WEc1c1pXWjBiV0Z5WjJsdVhHNGdJRzFwYmkxM2FXUjBhRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDUnRZWEpuYVc0dGJHVm1kRnh1SUNCdFlYZ3RkMmxrZEdnNklDQWdJQ0FnSUNBZ0lDQWdJQ0FrYldGeVoybHVMV3hsWm5SY2JseHVjbWxuYUhSdFlYSm5hVzVjYmlBZ2JXbHVMWGRwWkhSb09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSkcxaGNtZHBiaTF5YVdkb2RGeHVJQ0J0WVhndGQybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWtiV0Z5WjJsdUxYSnBaMmgwWEc1Y2JuUnZjRzFoY21kcGJseHVZbTkwZEc5dGJXRnlaMmx1WEc0Z0lIZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFd01DVmNiaUFnWm14bGVDMXphSEpwYm1zNklDQWdJQ0FnSUNBZ0lDQWdNRnh1SUNCbWJHVjRMV2R5YjNjNklDQWdJQ0FnSUNBZ0lDQWdJQ0F3WEc1Y2JuUnZjRzFoY21kcGJseHVJQ0J0YVc0dGFHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWtiV0Z5WjJsdUxYUnZjRnh1SUNCdFlYZ3RhR1ZwWjJoME9pQWdJQ0FnSUNBZ0lDQWdJQ0FrYldGeVoybHVMWFJ2Y0Z4dVhHNWliM1IwYjIxdFlYSm5hVzVjYmlBZ2JXbHVMV2hsYVdkb2REb2dJQ0FnSUNBZ0lDQWdJQ0FnSkcxaGNtZHBiaTFpYjNSMGIyMWNiaUFnYldGNExXaGxhV2RvZERvZ0lDQWdJQ0FnSUNBZ0lDQWdKRzFoY21kcGJpMWliM1IwYjIxY2JseHVYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYmtCdFpXUnBZU0J6WTNKbFpXNWNiaUFnYkdWbWRHMWhjbWRwYmx4dUlDQnlhV2RvZEcxaGNtZHBibHh1SUNCMGIzQnRZWEpuYVc1Y2JpQWdZbTkwZEc5dGJXRnlaMmx1WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJQ0FnSUNBZ0pHZHlZWGxjYmx4dVhHNWNibHh1THlvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRJQ292WEc1c2FXNWxYRzRnSUhCdmMybDBhVzl1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZpYzI5c2RYUmxYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQWdJQ0FnSUNBZ0lDQWdJRFZ0YlZ4dUlDQm9aV2xuYUhRNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBMWJXMWNiaUFnYldsdUxXaGxhV2RvZERvZ0lDQWdJQ0FnSUNBZ0lDQWdOVzF0WEc0Z0lHMWhlQzFvWldsbmFIUTZJQ0FnSUNBZ0lDQWdJQ0FnSURWdGJWeHVYRzV3WEc1b01WeHVhREpjYm1nelhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lEVnRiVnh1SUNCMFpYaDBMV0ZzYVdkdU9pQWdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVYRzRnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUFnSUNBZ0lDQWdJQzB3TGpBMVpYaGNiaUFnZDI5eVpDMXpjR0ZqYVc1bk9pQWdJQ0FnSUNBZ0lDQWdNR1Y0WEc0Z0lDOHZJSGR2Y21RdGMzQmhZMmx1WnpvZ0lDQWdJQ0FnSUNBZ0lDMHdMalZsZUZ4dVhHNXdPbUpsWm05eVpWeHVJQ0F2S2lBakl5TWdUa0lnWm1sNFpXUXRkMmxrZEdnZ2MzQmhZMlVnZFhObFpDQm9aWEpsT3lCelpXVWdaUzVuTGlCb2RIUndjem92TDNkM2R5NWpjeTUwZFhRdVpta3ZmbXByYjNKd1pXeGhMMk5vWVhKekwzTndZV05sY3k1b2RHMXNMaUFqSXlNZ0tpOWNiaUFnWTI5dWRHVnVkRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKK0tBZ1NkY2JpQWdMeThnWTI5dWRHVnVkRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKK0tkb2VLQWdTZGNiaUFnTHk4Z1kyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjNKbFpXNWNiaUFnTHk4Z2NEcGhablJsY2x4dUlDQXZMeUFnSUdOdmJuUmxiblE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2ZpbmFFZ0oxeHVJQ0F2THlBZ0lHTnZiRzl5T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbFpGeHVYRzU0WW1sblhHNGdJR1p2Ym5RdGMybDZaVG9nSUNBZ0lDQWdJQ0FnSUNBZ0lESXdNQ1ZjYmx4dWVITnRZV3hzWEc0Z0lHWnZiblF0YzJsNlpUb2dJQ0FnSUNBZ0lDQWdJQ0FnSURVd0pWeHVYRzVvZEcxc0xDQmliMlI1WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFnSUNBZ0lDQWdJQ0FnSUNkamFtc25MQ0FuYkdGMGFXNG5MQ0FuYkdGemRISmxjMjl5ZENkY2JseHVjM1J5YjI1blhHNWlYRzVvTVZ4dWFESmNibWd6WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFnSUNBZ0lDQWdJQ0FnSUNkSmJYQmhZM1FuWEc1Y2JpOHFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFNBcUwxeHVMeW9nUkU5RFZVMUZUbFF0VTFCRlEwbEdTVU1nVTFSVlJrWWdkMmhwWTJnZ2MyaHZkV3hrSUhKbFlXeHNlU0JuWlhRZ2FYUnpJRzkzYmlCemRIbHNaWE5vWldWMElDb3ZYRzR2S2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMGdLaTljYm10M2FXTXRiR2x1WlhWd1hHNGdJR1JwYzNCc1lYazZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNiMk5yWEc0Z0lIZG9hWFJsTFhOd1lXTmxPaUFnSUNBZ0lDQWdJQ0FnSUc1dmQzSmhjRnh1SUNCbWIyNTBMV1poYldsc2VUb2dJQ0FnSUNBZ0lDQWdJQ0FuWTJwckoxeHVYRzVjYmlJc0lseHVYRzVjYmx4dVFHMWxaR2xoSUhOamNtVmxibHh1SUNCaWIzaGNiaUFnYUdKdmVGeHVJQ0IyWW05NFhHNGdJSEpwWW1KdmJseHVJQ0JvY21saVltOXVYRzRnSUhaeWFXSmliMjVjYmlBZ2JHVm1kRzFoY21kcGJseHVJQ0J5YVdkb2RHMWhjbWRwYmx4dUlDQjBiM0J0WVhKbmFXNWNiaUFnWW05MGRHOXRiV0Z5WjJsdVhHNGdJR2RoY0Z4dUlDQjJaMkZ3WEc0Z0lHaG5ZWEJjYmlBZ2VHaG5ZWEJjYmlBZ0lDQnZkWFJzYVc1bE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeGNIZ2daRzkwZEdWa0lISmxaRnh1SUNBZ0lHOTFkR3hwYm1VdGIyWm1jMlYwT2lBZ0lDQWdJQ0FnSUMweGNIaGNiaUFnSUNBdkx5QnZkWFJzYVc1bExXOW1abk5sZERvZ0lDQWdJQ0FnSUNBdE1DNDFjSGhjYmx4dVhHNWNibHh1WEc0aVhTd2ljMjkxY21ObFVtOXZkQ0k2SWk5emIzVnlZMlV2SW4wPSAqLyJdfQ== */
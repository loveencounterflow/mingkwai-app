(function() {
  var CND, TEMPLATES, badge, debug, filename, help, i, len, locator, method, method_name, methods_and_locators, njs_fs, njs_path, ref, rpr, urge;

  njs_path = require('path');

  njs_fs = require('fs');

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = '眀快排字机/generate-html';

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  debug = CND.get_logger('debug', badge);

  TEMPLATES = require('./TEMPLATES');


  /* TAINT consider to define filenames in TEMPLATES */

  methods_and_locators = [['layout', njs_path.join(__dirname, './index.html')], ['test_page', njs_path.join(__dirname, './test.html')], ['splash_window', njs_path.join(__dirname, './splash.html')], ['font_test', njs_path.join(__dirname, './font-test.html')]];

  for (i = 0, len = methods_and_locators.length; i < len; i++) {
    ref = methods_and_locators[i], method_name = ref[0], locator = ref[1];
    filename = njs_path.basename(locator);
    help("compiling " + filename + " from TEMPLATES/" + method_name);
    if ((method = TEMPLATES[method_name]) == null) {
      throw new Error("unknown TEMPLATES method name " + (rpr(method_name)));
    }
    njs_fs.writeFileSync(locator, TEMPLATES[method_name](), {
      encoding: 'utf-8'
    });
    urge('wrote ' + locator);
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlLWh0bWwuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0FBQUEsTUFBQTs7RUFBQSxRQUFBLEdBQTRCLE9BQUEsQ0FBUSxNQUFSOztFQUM1QixNQUFBLEdBQTRCLE9BQUEsQ0FBUSxJQUFSOztFQUM1QixHQUFBLEdBQTRCLE9BQUEsQ0FBUSxLQUFSOztFQUM1QixHQUFBLEdBQTRCLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBUixDQUFhLEdBQWI7O0VBQzVCLEtBQUEsR0FBNEI7O0VBQzVCLElBQUEsR0FBNEIsR0FBRyxDQUFDLFVBQUosQ0FBZSxNQUFmLEVBQXVCLEtBQXZCOztFQUM1QixJQUFBLEdBQTRCLEdBQUcsQ0FBQyxVQUFKLENBQWUsTUFBZixFQUF1QixLQUF2Qjs7RUFDNUIsS0FBQSxHQUE0QixHQUFHLENBQUMsVUFBSixDQUFlLE9BQWYsRUFBd0IsS0FBeEI7O0VBQzVCLFNBQUEsR0FBNEIsT0FBQSxDQUFRLGFBQVI7OztBQUM1Qjs7RUFDQSxvQkFBQSxHQUE0QixDQUMxQixDQUFFLFFBQUYsRUFBb0IsUUFBUSxDQUFDLElBQVQsQ0FBYyxTQUFkLEVBQXlCLGNBQXpCLENBQXBCLENBRDBCLEVBRTFCLENBQUUsV0FBRixFQUFvQixRQUFRLENBQUMsSUFBVCxDQUFjLFNBQWQsRUFBeUIsYUFBekIsQ0FBcEIsQ0FGMEIsRUFHMUIsQ0FBRSxlQUFGLEVBQW9CLFFBQVEsQ0FBQyxJQUFULENBQWMsU0FBZCxFQUF5QixlQUF6QixDQUFwQixDQUgwQixFQUkxQixDQUFFLFdBQUYsRUFBb0IsUUFBUSxDQUFDLElBQVQsQ0FBYyxTQUFkLEVBQXlCLGtCQUF6QixDQUFwQixDQUowQjs7QUFVNUIsT0FBQSxzREFBQTttQ0FBTSxzQkFBYTtJQUNqQixRQUFBLEdBQVcsUUFBUSxDQUFDLFFBQVQsQ0FBa0IsT0FBbEI7SUFDWCxJQUFBLENBQUssWUFBQSxHQUFhLFFBQWIsR0FBc0Isa0JBQXRCLEdBQXdDLFdBQTdDO0lBQ0EsSUFBTyx5Q0FBUDtBQUNFLFlBQVUsSUFBQSxLQUFBLENBQU0sZ0NBQUEsR0FBZ0MsQ0FBQyxHQUFBLENBQUksV0FBSixDQUFELENBQXRDLEVBRFo7O0lBRUEsTUFBTSxDQUFDLGFBQVAsQ0FBcUIsT0FBckIsRUFBOEIsU0FBVyxDQUFBLFdBQUEsQ0FBWCxDQUFBLENBQTlCLEVBQTBEO01BQUEsUUFBQSxFQUFVLE9BQVY7S0FBMUQ7SUFDQSxJQUFBLENBQUssUUFBQSxHQUFXLE9BQWhCO0FBTkY7QUFwQkEiLCJmaWxlIjoiZ2VuZXJhdGUtaHRtbC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5cbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xubmpzX3BhdGggICAgICAgICAgICAgICAgICA9IHJlcXVpcmUgJ3BhdGgnXG5uanNfZnMgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnZnMnXG5DTkQgICAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnY25kJ1xucnByICAgICAgICAgICAgICAgICAgICAgICA9IENORC5ycHIuYmluZCBDTkRcbmJhZGdlICAgICAgICAgICAgICAgICAgICAgPSAn55yA5b+r5o6S5a2X5py6L2dlbmVyYXRlLWh0bWwnXG5oZWxwICAgICAgICAgICAgICAgICAgICAgID0gQ05ELmdldF9sb2dnZXIgJ2hlbHAnLCBiYWRnZVxudXJnZSAgICAgICAgICAgICAgICAgICAgICA9IENORC5nZXRfbG9nZ2VyICd1cmdlJywgYmFkZ2VcbmRlYnVnICAgICAgICAgICAgICAgICAgICAgPSBDTkQuZ2V0X2xvZ2dlciAnZGVidWcnLCBiYWRnZVxuVEVNUExBVEVTICAgICAgICAgICAgICAgICA9IHJlcXVpcmUgJy4vVEVNUExBVEVTJ1xuIyMjIFRBSU5UIGNvbnNpZGVyIHRvIGRlZmluZSBmaWxlbmFtZXMgaW4gVEVNUExBVEVTICMjI1xubWV0aG9kc19hbmRfbG9jYXRvcnMgICAgICA9IFtcbiAgWyAnbGF5b3V0JywgICAgICAgICBuanNfcGF0aC5qb2luIF9fZGlybmFtZSwgJy4vaW5kZXguaHRtbCcsICAgICAgXVxuICBbICd0ZXN0X3BhZ2UnLCAgICAgIG5qc19wYXRoLmpvaW4gX19kaXJuYW1lLCAnLi90ZXN0Lmh0bWwnLCAgICAgICBdXG4gIFsgJ3NwbGFzaF93aW5kb3cnLCAgbmpzX3BhdGguam9pbiBfX2Rpcm5hbWUsICcuL3NwbGFzaC5odG1sJywgICAgIF1cbiAgWyAnZm9udF90ZXN0JywgICAgICBuanNfcGF0aC5qb2luIF9fZGlybmFtZSwgJy4vZm9udC10ZXN0Lmh0bWwnLCAgXVxuICBdXG4jIGh0bWxfcm91dGUgICAgICAgICAgICAgICAgPSBsb2NhdG9yLnNsaWNlIF9fZGlybmFtZS5sZW5ndGhcblxuXG4jLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmZvciBbIG1ldGhvZF9uYW1lLCBsb2NhdG9yLCBdIGluIG1ldGhvZHNfYW5kX2xvY2F0b3JzXG4gIGZpbGVuYW1lID0gbmpzX3BhdGguYmFzZW5hbWUgbG9jYXRvclxuICBoZWxwIFwiY29tcGlsaW5nICN7ZmlsZW5hbWV9IGZyb20gVEVNUExBVEVTLyN7bWV0aG9kX25hbWV9XCJcbiAgdW5sZXNzICggbWV0aG9kID0gVEVNUExBVEVTWyBtZXRob2RfbmFtZSBdICk/XG4gICAgdGhyb3cgbmV3IEVycm9yIFwidW5rbm93biBURU1QTEFURVMgbWV0aG9kIG5hbWUgI3tycHIgbWV0aG9kX25hbWV9XCJcbiAgbmpzX2ZzLndyaXRlRmlsZVN5bmMgbG9jYXRvciwgVEVNUExBVEVTWyBtZXRob2RfbmFtZSBdKCksIGVuY29kaW5nOiAndXRmLTgnXG4gIHVyZ2UgJ3dyb3RlICcgKyBsb2NhdG9yXG5cblxuXG4iXX0=
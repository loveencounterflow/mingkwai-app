(function() {
  var CND, badge, debug, glyph_replacements, rpr, translate;

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = '眀快排字机/glyph-replacements';

  debug = CND.get_logger('debug', badge);


  /* TAINT this module should be separated from the app proper; make it a plugin? */


  /* TAINT as it stands, the glyph replacements are not sensitive to context; for example, the glyph
  `龺` will always receive a markup stating that font `BabelStone Han` should be used for display even when
  the contextual style calls for, say, a Heiti-style font.
   */

  glyph_replacements = {

    /* 'Late Additions' in upper part of CJK unified ideographs (Unicode v5.2); glyphs are missing
      from Sun-ExtA but are included in BabelstoneHan:
     */
    '龺': {
      tag: 'mkts-babel'
    },
    '龻': {
      tag: 'mkts-babel'
    },
    '龼': {
      tag: 'mkts-babel'
    },
    '龽': {
      tag: 'mkts-babel'
    },
    '龾': {
      tag: 'mkts-babel'
    },
    '龿': {
      tag: 'mkts-babel'
    },
    '鿀': {
      tag: 'mkts-babel'
    },
    '鿁': {
      tag: 'mkts-babel'
    },
    '鿂': {
      tag: 'mkts-babel'
    },
    '鿃': {
      tag: 'mkts-babel'
    },
    '鿄': {
      tag: 'mkts-babel'
    },
    '鿅': {
      tag: 'mkts-babel'
    },
    '鿆': {
      tag: 'mkts-babel'
    },
    '鿇': {
      tag: 'mkts-babel'
    },
    '鿈': {
      tag: 'mkts-babel'
    },
    '鿉': {
      tag: 'mkts-babel'
    },
    '鿊': {
      tag: 'mkts-babel'
    },
    '鿋': {
      tag: 'mkts-babel'
    },
    '鿌': {
      tag: 'mkts-babel'

      /* This glyph is damaged in Sun-ExtA; it happens to be included in HanaMinA: */
    },
    '䗍': {
      tag: 'mkts-hanaa'
    },
    '&#x3000;': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '囗': {
      tag: 'mkts-jzr',
      glyph: ''

      /* Shifted glyphs: */
    },
    '《': {
      push: 0.0,
      raise: -0.2,
      tag: 'mkts-sunxa'
    },
    '》': {
      push: 0.0,
      raise: -0.2,
      tag: 'mkts-sunxa'
    },
    '': {
      push: 0.5,
      raise: -0.2,
      tag: 'mkts-jzr'
    },
    '。': {
      push: 0.5,
      raise: 0.25,
      tag: 'mkts-sunxa'
    },
    '亻': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '冫': {
      push: 0.5,
      tag: 'mkts-sunxa'
    },
    '牜': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '飠': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '扌': {
      push: 0.05,
      tag: 'mkts-sunxa'
    },
    '犭': {
      push: 0.3,
      tag: 'mkts-sunxa'
    },
    '忄': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '礻': {
      push: 0.2,
      tag: 'mkts-sunxa'
    },
    '衤': {
      push: 0.1,
      tag: 'mkts-sunxa'
    },
    '讠': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '𧾷': {
      push: 0.4,
      tag: 'mkts-sunxb'
    },
    '卩': {
      push: -0.4,
      tag: 'mkts-sunxa'
    },
    '糹': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '纟': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '钅': {
      push: 0.3,
      tag: 'mkts-sunxa'
    },
    '阝': {
      push: 0.4,
      tag: 'mkts-sunxa'
    },
    '𩰊': {
      push: -0.15,
      tag: 'mkts-sunxb'
    },
    '𩰋': {
      push: 0.15,
      tag: 'mkts-sunxb'
    },
    '彳': {
      push: 0.15,
      tag: 'mkts-sunxa'
    },
    '': {
      raise: 0.1,
      tag: 'mkts-jzr'
    },
    '灬': {
      raise: 0.45,
      tag: 'mkts-sunxa'
    },
    '爫': {
      raise: -0.125,
      tag: 'mkts-sunxa'
    },
    '覀': {
      raise: -0.125,
      tag: 'mkts-sunxa'
    },
    '癶': {
      raise: -0.2,
      tag: 'mkts-babel'
    },
    '乛': {
      raise: -0.2,
      tag: 'mkts-sunxa'
    },
    '𥫗': {
      raise: -0.2,
      tag: 'mkts-sunxb'
    },
    '罓': {
      raise: -0.2,
      tag: 'mkts-sunxa'
    },
    '龵': {
      raise: -0.1,
      tag: 'mkts-babel'
    },
    '龸': {
      raise: -0.15,
      tag: 'mkts-sunxa'
    },
    '宀': {
      raise: -0.15,
      tag: 'mkts-sunxa'
    },
    '〇': {
      raise: -0.05,
      tag: 'mkts-babel'

      /* Glyphs represented by other codepoints: */
    },
    '覀': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '⻗': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '𡗗': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '丿': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '𠥓': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '龷': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '龶': {
      tag: 'mkts-jzr',
      glyph: ''
    },
    '⺆': {
      tag: 'mkts-babel'
    },
    '⺝': {
      tag: 'mkts-babel'
    },
    '⺶': {
      tag: 'mkts-babel'
    },
    '⺼': {
      tag: 'mkts-babel'
    },
    '〓': {
      tag: 'mkts-babel'
    },
    '〥': {
      tag: 'mkts-babel'
    },
    '〧': {
      tag: 'mkts-babel'
    },
    '〨': {
      tag: 'mkts-babel'
    },
    '㇁': {
      tag: 'mkts-babel'
    },
    '㇃': {
      tag: 'mkts-babel'
    },
    '㇄': {
      tag: 'mkts-babel'
    },
    '㇅': {
      tag: 'mkts-babel'
    },
    '㇈': {
      tag: 'mkts-babel'
    },
    '㇋': {
      tag: 'mkts-babel'
    },
    '㓁': {
      tag: 'mkts-babel'
    },
    '齒': {
      tag: 'mkts-babel'
    },
    '龰': {
      tag: 'mkts-babel'
    },
    '𤴔': {
      tag: 'mkts-babel'
    },
    '㐃': {
      tag: 'mkts-babel'
    },
    '⺀': {
      tag: 'mkts-hanaa'
    },
    '⺄': {
      tag: 'mkts-hanaa'
    },
    '⺌': {
      tag: 'mkts-hanaa'
    },
    '⺍': {
      tag: 'mkts-hanaa'
    },
    '⺗': {
      tag: 'mkts-hanaa'
    },
    '⺝': {
      tag: 'mkts-hanaa'
    },
    '⺥': {
      tag: 'mkts-hanaa'
    },
    '⺳': {
      tag: 'mkts-hanaa'
    },
    '⺻': {
      tag: 'mkts-hanaa'
    },
    '㇂': {
      tag: 'mkts-hanaa'
    },
    '㇉': {
      tag: 'mkts-hanaa'
    },
    '㇌': {
      tag: 'mkts-hanaa'
    },
    '㇢': {
      tag: 'mkts-hanaa'
    },
    '冖': {
      tag: 'mkts-hanaa'
    },
    '刂': {
      tag: 'mkts-hanaa'
    },
    '氵': {
      tag: 'mkts-hanaa'
    },
    '罒': {
      tag: 'mkts-hanaa'
    },
    '龴': {
      tag: 'mkts-hanaa'
    },
    '𠂉': {
      tag: 'mkts-hanaa'
    },
    '帯': {
      tag: 'mkts-hanaa'
    },
    '𠚜': {
      tag: 'mkts-hanab'
    },
    '𠚡': {
      tag: 'mkts-hanab'
    },
    '𠥧': {
      tag: 'mkts-hanab'
    },
    '𠥩': {
      tag: 'mkts-hanab'
    },
    '𠥪': {
      tag: 'mkts-hanab'
    },
    '𠥫': {
      tag: 'mkts-hanab'
    },
    '𠥬': {
      tag: 'mkts-hanab'
    },
    '𧀍': {
      tag: 'mkts-hanab'
    },
    '〢': {
      tag: 'mkts-sunxa'
    },
    '〣': {
      tag: 'mkts-sunxa'
    },
    '〥': {
      tag: 'mkts-sunxa'
    },
    '〽': {
      tag: 'mkts-sunxa'
    }
  };

  translate = function(source_glyph, settings) {
    var R, glyph, push, raise, style, tag, target_glyph;
    tag = settings.tag, glyph = settings.glyph, push = settings.push, raise = settings.raise;
    target_glyph = glyph != null ? glyph : source_glyph;
    R = tag != null ? "<" + tag + ">" + target_glyph + "</" + tag + ">" : target_glyph;
    if ((push != null) || (raise != null)) {
      style = '';
      if (push != null) {
        style += "left:" + push + "ex;";
      }
      if (raise != null) {
        style += "top:" + (-raise) + "em;";
      }
      R = "<shift style='" + style + "'>" + R + "</shift>";
    }
    return R;
  };

  module.exports = {};

  (function() {
    var results, settings, source_glyph;
    results = [];
    for (source_glyph in glyph_replacements) {
      settings = glyph_replacements[source_glyph];
      if (module.exports[source_glyph] != null) {
        throw new Error("duplicate key: " + (rpr(source_glyph)));
      }
      results.push(module.exports[source_glyph] = translate(source_glyph, settings));
    }
    return results;
  })();


  /*
  
  '〽': tag: 'mkts-sunxa' => """<mkts-sunxa>〽</mkts-sunxa>"""
  '彳': push:   0.15, tag: 'mkts-sunxa' => """<shift style='left:-0.15em;'><mkts-sunxa>彳</mkts-sunxa></shift>"""
  '': raise:  0.1,  tag: 'mkts-jzr'   => """<shift style='top:-0.1em'><mkts-jzr></mkts-jzr></shift>"""
  '。': push:   0.5,  raise: 0.25, tag: 'mkts-sunxa' => """<shift style='left:-0.5em;top:-0.25em'><mkts-sunxa>。</mkts-sunxa></shift>"""
   */

}).call(this);

//# sourceMappingURL=data:application/json;base64,